{"version":3,"file":"treeview.min.js","sources":["../../../src/plugins/treeview/js/mdb/util/index.js","../../../src/plugins/treeview/js/mdb/dom/data.js","../../../src/plugins/treeview/js/mdb/dom/manipulator.js","../../../src/plugins/treeview/js/mdb/dom/polyfill.js","../../../src/plugins/treeview/js/mdb/dom/selector-engine.js","../../../src/plugins/treeview/js/mdb/dom/event-handler.js","../../../src/plugins/treeview/js/mdb/util/keycodes.js","../../../src/plugins/treeview/js/treeview.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-beta1): util/index.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst MAX_UID = 1000000;\r\nconst MILLISECONDS_MULTIPLIER = 1000;\r\nconst TRANSITION_END = 'transitionend';\r\n\r\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\r\nconst toType = (obj) => {\r\n  if (obj === null || obj === undefined) {\r\n    return `${obj}`;\r\n  }\r\n\r\n  return {}.toString\r\n    .call(obj)\r\n    .match(/\\s([a-z]+)/i)[1]\r\n    .toLowerCase();\r\n};\r\n\r\n/**\r\n * --------------------------------------------------------------------------\r\n * Public Util Api\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst getUID = (prefix) => {\r\n  do {\r\n    prefix += Math.floor(Math.random() * MAX_UID);\r\n  } while (document.getElementById(prefix));\r\n\r\n  return prefix;\r\n};\r\n\r\nconst getSelector = (element) => {\r\n  let selector = element.getAttribute('data-mdb-target');\r\n\r\n  if (!selector || selector === '#') {\r\n    const hrefAttr = element.getAttribute('href');\r\n\r\n    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null;\r\n  }\r\n\r\n  return selector;\r\n};\r\n\r\nconst getSelectorFromElement = (element) => {\r\n  const selector = getSelector(element);\r\n\r\n  if (selector) {\r\n    return document.querySelector(selector) ? selector : null;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst getElementFromSelector = (element) => {\r\n  const selector = getSelector(element);\r\n\r\n  return selector ? document.querySelector(selector) : null;\r\n};\r\n\r\nconst getTransitionDurationFromElement = (element) => {\r\n  if (!element) {\r\n    return 0;\r\n  }\r\n\r\n  // Get transition-duration of the element\r\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element);\r\n\r\n  const floatTransitionDuration = Number.parseFloat(transitionDuration);\r\n  const floatTransitionDelay = Number.parseFloat(transitionDelay);\r\n\r\n  // Return 0 if element or transition duration is not found\r\n  if (!floatTransitionDuration && !floatTransitionDelay) {\r\n    return 0;\r\n  }\r\n\r\n  // If multiple durations are defined, take the first\r\n  transitionDuration = transitionDuration.split(',')[0];\r\n  transitionDelay = transitionDelay.split(',')[0];\r\n\r\n  return (\r\n    (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) *\r\n    MILLISECONDS_MULTIPLIER\r\n  );\r\n};\r\n\r\nconst triggerTransitionEnd = (element) => {\r\n  element.dispatchEvent(new Event(TRANSITION_END));\r\n};\r\n\r\nconst isElement = (obj) => (obj[0] || obj).nodeType;\r\n\r\nconst emulateTransitionEnd = (element, duration) => {\r\n  let called = false;\r\n  const durationPadding = 5;\r\n  const emulatedDuration = duration + durationPadding;\r\n\r\n  function listener() {\r\n    called = true;\r\n    element.removeEventListener(TRANSITION_END, listener);\r\n  }\r\n\r\n  element.addEventListener(TRANSITION_END, listener);\r\n  setTimeout(() => {\r\n    if (!called) {\r\n      triggerTransitionEnd(element);\r\n    }\r\n  }, emulatedDuration);\r\n};\r\n\r\nconst typeCheckConfig = (componentName, config, configTypes) => {\r\n  Object.keys(configTypes).forEach((property) => {\r\n    const expectedTypes = configTypes[property];\r\n    const value = config[property];\r\n    const valueType = value && isElement(value) ? 'element' : toType(value);\r\n\r\n    if (!new RegExp(expectedTypes).test(valueType)) {\r\n      throw new Error(\r\n        `${componentName.toUpperCase()}: ` +\r\n          `Option \"${property}\" provided type \"${valueType}\" ` +\r\n          `but expected type \"${expectedTypes}\".`\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\nconst isVisible = (element) => {\r\n  if (!element) {\r\n    return false;\r\n  }\r\n\r\n  if (element.style && element.parentNode && element.parentNode.style) {\r\n    const elementStyle = getComputedStyle(element);\r\n    const parentNodeStyle = getComputedStyle(element.parentNode);\r\n\r\n    return (\r\n      elementStyle.display !== 'none' &&\r\n      parentNodeStyle.display !== 'none' &&\r\n      elementStyle.visibility !== 'hidden'\r\n    );\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst findShadowRoot = (element) => {\r\n  if (!document.documentElement.attachShadow) {\r\n    return null;\r\n  }\r\n\r\n  // Can find the shadow root otherwise it'll return the document\r\n  if (typeof element.getRootNode === 'function') {\r\n    const root = element.getRootNode();\r\n    return root instanceof ShadowRoot ? root : null;\r\n  }\r\n\r\n  if (element instanceof ShadowRoot) {\r\n    return element;\r\n  }\r\n\r\n  // when we don't find a shadow root\r\n  if (!element.parentNode) {\r\n    return null;\r\n  }\r\n\r\n  return findShadowRoot(element.parentNode);\r\n};\r\n\r\nconst noop = () => function () {};\r\n\r\nconst reflow = (element) => element.offsetHeight;\r\n\r\nconst getjQuery = () => {\r\n  const { jQuery } = window;\r\n\r\n  if (jQuery && !document.body.hasAttribute('data-mdb-no-jquery')) {\r\n    return jQuery;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst onDOMContentLoaded = (callback) => {\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', callback);\r\n  } else {\r\n    callback();\r\n  }\r\n};\r\n\r\nconst isRTL = document.documentElement.dir === 'rtl';\r\n\r\nconst array = (collection) => {\r\n  return Array.from(collection);\r\n};\r\n\r\nconst element = (tag) => {\r\n  return document.createElement(tag);\r\n};\r\n\r\nexport {\r\n  getjQuery,\r\n  TRANSITION_END,\r\n  getUID,\r\n  getSelectorFromElement,\r\n  getElementFromSelector,\r\n  getTransitionDurationFromElement,\r\n  triggerTransitionEnd,\r\n  isElement,\r\n  emulateTransitionEnd,\r\n  typeCheckConfig,\r\n  isVisible,\r\n  findShadowRoot,\r\n  noop,\r\n  reflow,\r\n  array,\r\n  element,\r\n  onDOMContentLoaded,\r\n  isRTL,\r\n};\r\n","/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-alpha1): dom/data.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Constants\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nconst mapData = (() => {\r\n  const storeData = {};\r\n  let id = 1;\r\n  return {\r\n    set(element, key, data) {\r\n      if (typeof element[key] === 'undefined') {\r\n        element[key] = {\r\n          key,\r\n          id,\r\n        };\r\n        id++;\r\n      }\r\n\r\n      storeData[element[key].id] = data;\r\n    },\r\n    get(element, key) {\r\n      if (!element || typeof element[key] === 'undefined') {\r\n        return null;\r\n      }\r\n\r\n      const keyProperties = element[key];\r\n      if (keyProperties.key === key) {\r\n        return storeData[keyProperties.id];\r\n      }\r\n\r\n      return null;\r\n    },\r\n    delete(element, key) {\r\n      if (typeof element[key] === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      const keyProperties = element[key];\r\n      if (keyProperties.key === key) {\r\n        delete storeData[keyProperties.id];\r\n        delete element[key];\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\nconst Data = {\r\n  setData(instance, key, data) {\r\n    mapData.set(instance, key, data);\r\n  },\r\n  getData(instance, key) {\r\n    return mapData.get(instance, key);\r\n  },\r\n  removeData(instance, key) {\r\n    mapData.delete(instance, key);\r\n  },\r\n};\r\n\r\nexport default Data;\r\n","/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-beta1): dom/manipulator.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nfunction normalizeData(val) {\r\n  if (val === 'true') {\r\n    return true;\r\n  }\r\n\r\n  if (val === 'false') {\r\n    return false;\r\n  }\r\n\r\n  if (val === Number(val).toString()) {\r\n    return Number(val);\r\n  }\r\n\r\n  if (val === '' || val === 'null') {\r\n    return null;\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\nfunction normalizeDataKey(key) {\r\n  return key.replace(/[A-Z]/g, (chr) => `-${chr.toLowerCase()}`);\r\n}\r\n\r\nconst Manipulator = {\r\n  setDataAttribute(element, key, value) {\r\n    element.setAttribute(`data-mdb-${normalizeDataKey(key)}`, value);\r\n  },\r\n\r\n  removeDataAttribute(element, key) {\r\n    element.removeAttribute(`data-mdb-${normalizeDataKey(key)}`);\r\n  },\r\n\r\n  getDataAttributes(element) {\r\n    if (!element) {\r\n      return {};\r\n    }\r\n\r\n    const attributes = {\r\n      ...element.dataset,\r\n    };\r\n\r\n    Object.keys(attributes)\r\n      .filter((key) => key.startsWith('mdb'))\r\n      .forEach((key) => {\r\n        let pureKey = key.replace(/^mdb/, '');\r\n        pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);\r\n        attributes[pureKey] = normalizeData(attributes[key]);\r\n      });\r\n\r\n    return attributes;\r\n  },\r\n\r\n  getDataAttribute(element, key) {\r\n    return normalizeData(element.getAttribute(`data-mdb-${normalizeDataKey(key)}`));\r\n  },\r\n\r\n  offset(element) {\r\n    const rect = element.getBoundingClientRect();\r\n\r\n    return {\r\n      top: rect.top + document.body.scrollTop,\r\n      left: rect.left + document.body.scrollLeft,\r\n    };\r\n  },\r\n\r\n  position(element) {\r\n    return {\r\n      top: element.offsetTop,\r\n      left: element.offsetLeft,\r\n    };\r\n  },\r\n\r\n  style(element, style) {\r\n    Object.assign(element.style, style);\r\n  },\r\n\r\n  toggleClass(element, className) {\r\n    if (!element) {\r\n      return;\r\n    }\r\n\r\n    if (element.classList.contains(className)) {\r\n      element.classList.remove(className);\r\n    } else {\r\n      element.classList.add(className);\r\n    }\r\n  },\r\n\r\n  addClass(element, className) {\r\n    if (element.classList.contains(className)) return;\r\n    element.classList.add(className);\r\n  },\r\n\r\n  addStyle(element, style) {\r\n    Object.keys(style).forEach((property) => {\r\n      element.style[property] = style[property];\r\n    });\r\n  },\r\n\r\n  removeClass(element, className) {\r\n    if (!element.classList.contains(className)) return;\r\n    element.classList.remove(className);\r\n  },\r\n\r\n  hasClass(element, className) {\r\n    return element.classList.contains(className);\r\n  },\r\n};\r\n\r\nexport default Manipulator;\r\n","/* istanbul ignore file */\r\n\r\n/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-alpha1): dom/polyfill.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport { getUID } from '../util/index';\r\n\r\nlet findElements = Element.prototype.querySelectorAll;\r\nlet findElement = Element.prototype.querySelector;\r\n\r\n// MSEdge resets defaultPrevented flag upon dispatchEvent call if at least one listener is attached\r\nconst defaultPreventedPreservedOnDispatch = (() => {\r\n  const e = new CustomEvent('Bootstrap', {\r\n    cancelable: true,\r\n  });\r\n\r\n  const element = document.createElement('div');\r\n  element.addEventListener('Bootstrap', () => null);\r\n\r\n  e.preventDefault();\r\n  element.dispatchEvent(e);\r\n  return e.defaultPrevented;\r\n})();\r\n\r\nconst scopeSelectorRegex = /:scope\\b/;\r\nconst supportScopeQuery = (() => {\r\n  const element = document.createElement('div');\r\n\r\n  try {\r\n    element.querySelectorAll(':scope *');\r\n  } catch (_) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n})();\r\n\r\nif (!supportScopeQuery) {\r\n  findElements = function (selector) {\r\n    if (!scopeSelectorRegex.test(selector)) {\r\n      return this.querySelectorAll(selector);\r\n    }\r\n\r\n    const hasId = Boolean(this.id);\r\n\r\n    if (!hasId) {\r\n      this.id = getUID('scope');\r\n    }\r\n\r\n    let nodeList = null;\r\n    try {\r\n      selector = selector.replace(scopeSelectorRegex, `#${this.id}`);\r\n      nodeList = this.querySelectorAll(selector);\r\n    } finally {\r\n      if (!hasId) {\r\n        this.removeAttribute('id');\r\n      }\r\n    }\r\n\r\n    return nodeList;\r\n  };\r\n\r\n  findElement = function (selector) {\r\n    if (!scopeSelectorRegex.test(selector)) {\r\n      return this.querySelector(selector);\r\n    }\r\n\r\n    const matches = find.call(this, selector);\r\n\r\n    if (typeof matches[0] !== 'undefined') {\r\n      return matches[0];\r\n    }\r\n\r\n    return null;\r\n  };\r\n}\r\n\r\nconst find = findElements;\r\nconst findOne = findElement;\r\n\r\nexport { find, findOne, defaultPreventedPreservedOnDispatch };\r\n","/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-alpha1): dom/selector-engine.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport { find as findFn, findOne } from './polyfill';\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Constants\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nconst NODE_TEXT = 3;\r\n\r\nconst SelectorEngine = {\r\n  closest(element, selector) {\r\n    return element.closest(selector);\r\n  },\r\n\r\n  matches(element, selector) {\r\n    return element.matches(selector);\r\n  },\r\n\r\n  find(selector, element = document.documentElement) {\r\n    return [].concat(...findFn.call(element, selector));\r\n  },\r\n\r\n  findOne(selector, element = document.documentElement) {\r\n    return findOne.call(element, selector);\r\n  },\r\n\r\n  children(element, selector) {\r\n    const children = [].concat(...element.children);\r\n\r\n    return children.filter((child) => child.matches(selector));\r\n  },\r\n\r\n  parents(element, selector) {\r\n    const parents = [];\r\n\r\n    let ancestor = element.parentNode;\r\n\r\n    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\r\n      if (this.matches(ancestor, selector)) {\r\n        parents.push(ancestor);\r\n      }\r\n\r\n      ancestor = ancestor.parentNode;\r\n    }\r\n\r\n    return parents;\r\n  },\r\n\r\n  prev(element, selector) {\r\n    let previous = element.previousElementSibling;\r\n\r\n    while (previous) {\r\n      if (previous.matches(selector)) {\r\n        return [previous];\r\n      }\r\n\r\n      previous = previous.previousElementSibling;\r\n    }\r\n\r\n    return [];\r\n  },\r\n\r\n  next(element, selector) {\r\n    let next = element.nextElementSibling;\r\n\r\n    while (next) {\r\n      if (this.matches(next, selector)) {\r\n        return [next];\r\n      }\r\n\r\n      next = next.nextElementSibling;\r\n    }\r\n\r\n    return [];\r\n  },\r\n};\r\n\r\nexport default SelectorEngine;\r\n","/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-alpha1): dom/event-handler.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport { defaultPreventedPreservedOnDispatch } from './polyfill';\r\nimport { getjQuery } from '../util/index';\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Constants\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nconst $ = getjQuery();\r\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\r\nconst stripNameRegex = /\\..*/;\r\nconst stripUidRegex = /::\\d+$/;\r\nconst eventRegistry = {}; // Events storage\r\nlet uidEvent = 1;\r\nconst customEvents = {\r\n  mouseenter: 'mouseover',\r\n  mouseleave: 'mouseout',\r\n};\r\nconst nativeEvents = [\r\n  'click',\r\n  'dblclick',\r\n  'mouseup',\r\n  'mousedown',\r\n  'contextmenu',\r\n  'mousewheel',\r\n  'DOMMouseScroll',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'selectstart',\r\n  'selectend',\r\n  'keydown',\r\n  'keypress',\r\n  'keyup',\r\n  'orientationchange',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchend',\r\n  'touchcancel',\r\n  'pointerdown',\r\n  'pointermove',\r\n  'pointerup',\r\n  'pointerleave',\r\n  'pointercancel',\r\n  'gesturestart',\r\n  'gesturechange',\r\n  'gestureend',\r\n  'focus',\r\n  'blur',\r\n  'change',\r\n  'reset',\r\n  'select',\r\n  'submit',\r\n  'focusin',\r\n  'focusout',\r\n  'load',\r\n  'unload',\r\n  'beforeunload',\r\n  'resize',\r\n  'move',\r\n  'DOMContentLoaded',\r\n  'readystatechange',\r\n  'error',\r\n  'abort',\r\n  'scroll',\r\n];\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Private methods\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nfunction getUidEvent(element, uid) {\r\n  return (uid && `${uid}::${uidEvent++}`) || element.uidEvent || uidEvent++;\r\n}\r\n\r\nfunction getEvent(element) {\r\n  const uid = getUidEvent(element);\r\n\r\n  element.uidEvent = uid;\r\n  eventRegistry[uid] = eventRegistry[uid] || {};\r\n\r\n  return eventRegistry[uid];\r\n}\r\n\r\nfunction bootstrapHandler(element, fn) {\r\n  return function handler(event) {\r\n    if (handler.oneOff) {\r\n      EventHandler.off(element, event.type, fn);\r\n    }\r\n\r\n    return fn.apply(element, [event]);\r\n  };\r\n}\r\n\r\nfunction bootstrapDelegationHandler(element, selector, fn) {\r\n  return function handler(event) {\r\n    const domElements = element.querySelectorAll(selector);\r\n\r\n    for (let { target } = event; target && target !== this; target = target.parentNode) {\r\n      for (let i = domElements.length; i--; '') {\r\n        if (domElements[i] === target) {\r\n          if (handler.oneOff) {\r\n            EventHandler.off(element, event.type, fn);\r\n          }\r\n\r\n          return fn.apply(target, [event]);\r\n        }\r\n      }\r\n    }\r\n\r\n    // To please ESLint\r\n    return null;\r\n  };\r\n}\r\n\r\nfunction findHandler(events, handler, delegationSelector = null) {\r\n  const uidEventList = Object.keys(events);\r\n\r\n  for (let i = 0, len = uidEventList.length; i < len; i++) {\r\n    const event = events[uidEventList[i]];\r\n\r\n    if (event.originalHandler === handler && event.delegationSelector === delegationSelector) {\r\n      return event;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction normalizeParams(originalTypeEvent, handler, delegationFn) {\r\n  const delegation = typeof handler === 'string';\r\n  const originalHandler = delegation ? delegationFn : handler;\r\n\r\n  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\r\n  let typeEvent = originalTypeEvent.replace(stripNameRegex, '');\r\n  const custom = customEvents[typeEvent];\r\n\r\n  if (custom) {\r\n    typeEvent = custom;\r\n  }\r\n\r\n  const isNative = nativeEvents.indexOf(typeEvent) > -1;\r\n\r\n  if (!isNative) {\r\n    typeEvent = originalTypeEvent;\r\n  }\r\n\r\n  return [delegation, originalHandler, typeEvent];\r\n}\r\n\r\nfunction addHandler(element, originalTypeEvent, handler, delegationFn, oneOff) {\r\n  if (typeof originalTypeEvent !== 'string' || !element) {\r\n    return;\r\n  }\r\n\r\n  if (!handler) {\r\n    handler = delegationFn;\r\n    delegationFn = null;\r\n  }\r\n\r\n  const [delegation, originalHandler, typeEvent] = normalizeParams(\r\n    originalTypeEvent,\r\n    handler,\r\n    delegationFn\r\n  );\r\n  const events = getEvent(element);\r\n  const handlers = events[typeEvent] || (events[typeEvent] = {});\r\n  const previousFn = findHandler(handlers, originalHandler, delegation ? handler : null);\r\n\r\n  if (previousFn) {\r\n    previousFn.oneOff = previousFn.oneOff && oneOff;\r\n\r\n    return;\r\n  }\r\n\r\n  const uid = getUidEvent(originalHandler, originalTypeEvent.replace(namespaceRegex, ''));\r\n  const fn = delegation\r\n    ? bootstrapDelegationHandler(element, handler, delegationFn)\r\n    : bootstrapHandler(element, handler);\r\n\r\n  fn.delegationSelector = delegation ? handler : null;\r\n  fn.originalHandler = originalHandler;\r\n  fn.oneOff = oneOff;\r\n  fn.uidEvent = uid;\r\n  handlers[uid] = fn;\r\n\r\n  element.addEventListener(typeEvent, fn, delegation);\r\n}\r\n\r\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\r\n  const fn = findHandler(events[typeEvent], handler, delegationSelector);\r\n\r\n  if (!fn) {\r\n    return;\r\n  }\r\n\r\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\r\n  delete events[typeEvent][fn.uidEvent];\r\n}\r\n\r\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\r\n  const storeElementEvent = events[typeEvent] || {};\r\n\r\n  Object.keys(storeElementEvent).forEach((handlerKey) => {\r\n    if (handlerKey.indexOf(namespace) > -1) {\r\n      const event = storeElementEvent[handlerKey];\r\n\r\n      removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);\r\n    }\r\n  });\r\n}\r\n\r\nconst EventHandler = {\r\n  on(element, event, handler, delegationFn) {\r\n    addHandler(element, event, handler, delegationFn, false);\r\n  },\r\n\r\n  one(element, event, handler, delegationFn) {\r\n    addHandler(element, event, handler, delegationFn, true);\r\n  },\r\n\r\n  off(element, originalTypeEvent, handler, delegationFn) {\r\n    if (typeof originalTypeEvent !== 'string' || !element) {\r\n      return;\r\n    }\r\n\r\n    const [delegation, originalHandler, typeEvent] = normalizeParams(\r\n      originalTypeEvent,\r\n      handler,\r\n      delegationFn\r\n    );\r\n    const inNamespace = typeEvent !== originalTypeEvent;\r\n    const events = getEvent(element);\r\n    const isNamespace = originalTypeEvent.charAt(0) === '.';\r\n\r\n    if (typeof originalHandler !== 'undefined') {\r\n      // Simplest case: handler is passed, remove that listener ONLY.\r\n      if (!events || !events[typeEvent]) {\r\n        return;\r\n      }\r\n\r\n      removeHandler(element, events, typeEvent, originalHandler, delegation ? handler : null);\r\n      return;\r\n    }\r\n\r\n    if (isNamespace) {\r\n      Object.keys(events).forEach((elementEvent) => {\r\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\r\n      });\r\n    }\r\n\r\n    const storeElementEvent = events[typeEvent] || {};\r\n    Object.keys(storeElementEvent).forEach((keyHandlers) => {\r\n      const handlerKey = keyHandlers.replace(stripUidRegex, '');\r\n\r\n      if (!inNamespace || originalTypeEvent.indexOf(handlerKey) > -1) {\r\n        const event = storeElementEvent[keyHandlers];\r\n\r\n        removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);\r\n      }\r\n    });\r\n  },\r\n\r\n  trigger(element, event, args) {\r\n    if (typeof event !== 'string' || !element) {\r\n      return null;\r\n    }\r\n\r\n    const typeEvent = event.replace(stripNameRegex, '');\r\n    const inNamespace = event !== typeEvent;\r\n    const isNative = nativeEvents.indexOf(typeEvent) > -1;\r\n\r\n    let jQueryEvent;\r\n    let bubbles = true;\r\n    let nativeDispatch = true;\r\n    let defaultPrevented = false;\r\n    let evt = null;\r\n\r\n    if (inNamespace && $) {\r\n      jQueryEvent = $.Event(event, args);\r\n\r\n      $(element).trigger(jQueryEvent);\r\n      bubbles = !jQueryEvent.isPropagationStopped();\r\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\r\n      defaultPrevented = jQueryEvent.isDefaultPrevented();\r\n    }\r\n\r\n    if (isNative) {\r\n      evt = document.createEvent('HTMLEvents');\r\n      evt.initEvent(typeEvent, bubbles, true);\r\n    } else {\r\n      evt = new CustomEvent(event, {\r\n        bubbles,\r\n        cancelable: true,\r\n      });\r\n    }\r\n\r\n    // merge custom informations in our event\r\n    if (typeof args !== 'undefined') {\r\n      Object.keys(args).forEach((key) => {\r\n        Object.defineProperty(evt, key, {\r\n          get() {\r\n            return args[key];\r\n          },\r\n        });\r\n      });\r\n    }\r\n\r\n    if (defaultPrevented) {\r\n      evt.preventDefault();\r\n\r\n      if (!defaultPreventedPreservedOnDispatch) {\r\n        Object.defineProperty(evt, 'defaultPrevented', {\r\n          get: () => true,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (nativeDispatch) {\r\n      element.dispatchEvent(evt);\r\n    }\r\n\r\n    if (evt.defaultPrevented && typeof jQueryEvent !== 'undefined') {\r\n      jQueryEvent.preventDefault();\r\n    }\r\n\r\n    return evt;\r\n  },\r\n};\r\n\r\nexport const EventHandlerMulti = {\r\n  on(element, eventsName, handler, delegationFn) {\r\n    const events = eventsName.split(' ');\r\n\r\n    for (let i = 0; i < events.length; i++) {\r\n      EventHandler.on(element, events[i], handler, delegationFn);\r\n    }\r\n  },\r\n  off(element, originalTypeEvent, handler, delegationFn) {\r\n    const events = originalTypeEvent.split(' ');\r\n\r\n    for (let i = 0; i < events.length; i++) {\r\n      EventHandler.off(element, events[i], handler, delegationFn);\r\n    }\r\n  },\r\n};\r\n\r\nexport default EventHandler;\r\n","export const LEFT_ARROW = 37;\r\nexport const UP_ARROW = 38;\r\nexport const RIGHT_ARROW = 39;\r\nexport const DOWN_ARROW = 40;\r\nexport const HOME = 36;\r\nexport const END = 35;\r\nexport const PAGE_UP = 33;\r\nexport const PAGE_DOWN = 34;\r\nexport const ENTER = 13;\r\nexport const SPACE = 32;\r\nexport const ESCAPE = 27;\r\nexport const TAB = 9;\r\nexport const BACKSPACE = 8;\r\nexport const DELETE = 46;\r\nexport const A = 65;\r\nexport const B = 66;\r\nexport const C = 67;\r\nexport const D = 68;\r\nexport const E = 69;\r\nexport const F = 70;\r\nexport const G = 71;\r\nexport const H = 72;\r\nexport const I = 73;\r\nexport const J = 74;\r\nexport const K = 75;\r\nexport const L = 76;\r\nexport const M = 77;\r\nexport const N = 78;\r\nexport const O = 79;\r\nexport const P = 80;\r\nexport const Q = 81;\r\nexport const R = 82;\r\nexport const S = 83;\r\nexport const T = 84;\r\nexport const U = 85;\r\nexport const V = 86;\r\nexport const W = 87;\r\nexport const X = 88;\r\nexport const Y = 89;\r\nexport const Z = 90;\r\n","import { getjQuery, typeCheckConfig, element, getUID, onDOMContentLoaded } from './mdb/util/index';\r\nimport Data from './mdb/dom/data';\r\nimport Manipulator from './mdb/dom/manipulator';\r\nimport SelectorEngine from './mdb/dom/selector-engine';\r\nimport EventHandler from './mdb/dom/event-handler';\r\nimport {\r\n  ENTER,\r\n  DOWN_ARROW,\r\n  UP_ARROW,\r\n  TAB,\r\n  RIGHT_ARROW,\r\n  LEFT_ARROW,\r\n  HOME,\r\n  END,\r\n} from './mdb/util/keycodes';\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Constants\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nconst NAME = 'treeview';\r\nconst DATA_KEY = 'mdb.treeview';\r\n\r\nconst EVENT_ITEM_SELECTED = 'itemSelected.mdb.treeview';\r\nconst EVENT_ITEM_ACTIVE = 'itemActive.mdb.treeview';\r\nconst EVENT_HIDE_COLLAPSE = 'hide.bs.collapse';\r\nconst EVENT_SHOW_COLLAPSE = 'show.bs.collapse';\r\n\r\nconst SELECTOR_INNER_ULS = 'ul:not([role=\"tree\"])';\r\nconst SELECTOR_ICON_SPAN = 'span[aria-label=\"toggle\"]';\r\nconst SELECTOR_TOGGLER_ICON = 'i';\r\nconst SELECTOR_CHECKBOX = 'input[type=\"checkbox\"]';\r\n\r\nconst SELECTOR_DATA_INIT = '[data-mdb-treeview-init]';\r\n\r\nconst CLASSNAME_TREEVIEW = 'treeview';\r\nconst CLASSNAME_SHOW = 'show';\r\nconst CLASSNAME_FORM_INPUT = 'form-check-input';\r\nconst CLASSNAME_SELECTED = 'active';\r\nconst CLASSNAME_CATEGORY = 'treeview-category';\r\nconst CLASSNAME_LINE = 'treeview-line';\r\nconst CLASSNAME_DISABLED = 'treeview-disabled';\r\n\r\nconst COLORS = ['primary', 'secondary', 'warning', 'success', 'info', 'danger', 'light', 'dark'];\r\n\r\nconst COLLAPSE_ANIMATION_DURATION = 351;\r\n\r\nconst DefaultType = {\r\n  structure: '(null|array)',\r\n  openOnClick: 'boolean',\r\n  selectable: 'boolean',\r\n  accordion: 'boolean',\r\n  rotationAngle: 'number',\r\n  treeviewColor: 'string',\r\n  line: 'boolean',\r\n};\r\n\r\nconst Default = {\r\n  structure: null,\r\n  openOnClick: true,\r\n  selectable: false,\r\n  accordion: false,\r\n  rotationAngle: 90,\r\n  treeviewColor: 'primary',\r\n  line: false,\r\n};\r\n\r\nclass Treeview {\r\n  constructor(element, data) {\r\n    this._element = element;\r\n\r\n    if (this._element) {\r\n      Data.setData(element, DATA_KEY, this);\r\n    }\r\n\r\n    this._options = this._getConfig(data);\r\n\r\n    this._innerLists = [];\r\n\r\n    this._stringCollection = new Map();\r\n\r\n    this._init();\r\n\r\n    this._checkboxes = SelectorEngine.find(SELECTOR_CHECKBOX, this._mainList);\r\n\r\n    this._listElements = SelectorEngine.find('li', this._mainList);\r\n  }\r\n\r\n  // Getters\r\n\r\n  static get NAME() {\r\n    return NAME;\r\n  }\r\n\r\n  get parsedDOM() {\r\n    return this._parseDOM(this._element);\r\n  }\r\n\r\n  get selectedItems() {\r\n    return SelectorEngine.find(SELECTOR_CHECKBOX, this._mainList)\r\n      .filter((checkbox) => checkbox.checked)\r\n      .map((checkbox) => {\r\n        const [parent] = SelectorEngine.parents(checkbox, 'li');\r\n\r\n        return parent;\r\n      });\r\n  }\r\n\r\n  // Public\r\n\r\n  dispose() {\r\n    Data.removeData(this._element, DATA_KEY);\r\n\r\n    this._checkboxes.forEach((checkbox) => {\r\n      EventHandler.off(checkbox, 'change');\r\n      EventHandler.off(checkbox, 'mousedown');\r\n    });\r\n\r\n    this._listElements.forEach((item) => {\r\n      EventHandler.off(item, 'click');\r\n      EventHandler.off(item, 'mouseover');\r\n      EventHandler.off(item, 'mouseout');\r\n      EventHandler.off(item, 'keydown');\r\n    });\r\n\r\n    // collapse\r\n\r\n    this._innerLists.forEach((list) => {\r\n      list.collapse.dispose();\r\n\r\n      const [toggler] = SelectorEngine.parents(list.toggler, 'a');\r\n\r\n      EventHandler.off(toggler, 'click');\r\n    });\r\n\r\n    this._element = null;\r\n  }\r\n\r\n  collapse() {\r\n    SelectorEngine.find('ul', this._mainList).forEach((el) => {\r\n      if (Manipulator.hasClass(el, CLASSNAME_SHOW)) {\r\n        const { collapse } = this._getInnerList(el);\r\n\r\n        collapse.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  expand(ID) {\r\n    const target = SelectorEngine.findOne(`#${ID}`, this._mainList);\r\n\r\n    const parents = SelectorEngine.parents(target, SELECTOR_INNER_ULS);\r\n\r\n    [target, ...parents].forEach((el) => {\r\n      if (!Manipulator.hasClass(el, CLASSNAME_SHOW)) {\r\n        const { collapse } = this._getInnerList(el);\r\n\r\n        collapse.show();\r\n      }\r\n    });\r\n  }\r\n\r\n  filter(phrase) {\r\n    this.collapse();\r\n\r\n    setTimeout(() => {\r\n      this._stringCollection.forEach((text, node) => {\r\n        const stringToSearch = this._normalize(phrase);\r\n\r\n        const stringToCheck = this._normalize(text);\r\n\r\n        if (stringToCheck.includes(stringToSearch)) {\r\n          let ul;\r\n\r\n          if (Manipulator.hasClass(node, CLASSNAME_CATEGORY)) {\r\n            [ul] = SelectorEngine.parents(node, 'ul');\r\n          } else {\r\n            ul = SelectorEngine.findOne('ul', node);\r\n          }\r\n\r\n          const isExpanded = Manipulator.hasClass(ul, CLASSNAME_SHOW);\r\n          const hasChildren = SelectorEngine.children(node, 'ul').length > 0;\r\n\r\n          if (!isExpanded && hasChildren) {\r\n            const id = ul.getAttribute('id');\r\n\r\n            this.expand(id);\r\n          }\r\n        }\r\n      });\r\n    }, COLLAPSE_ANIMATION_DURATION);\r\n  }\r\n\r\n  // Private\r\n\r\n  _init() {\r\n    const { initMDB, Collapse } = mdb;\r\n    initMDB({ Collapse });\r\n\r\n    if (this._options.structure) {\r\n      this._initJS();\r\n    } else {\r\n      this._initDOM();\r\n    }\r\n\r\n    EventHandler.on(this._element, 'keydown', (e) => {\r\n      const { keyCode } = e;\r\n\r\n      if (keyCode === TAB) {\r\n        return;\r\n      }\r\n\r\n      if (keyCode === DOWN_ARROW) {\r\n        e.preventDefault();\r\n\r\n        this._handleHomeKey();\r\n      }\r\n    });\r\n  }\r\n\r\n  _initJS() {\r\n    this._generateMainList();\r\n\r\n    Manipulator.addClass(this._element, CLASSNAME_TREEVIEW);\r\n\r\n    this._options.structure.forEach((treeNode) => this._generateTree(treeNode, this._mainList));\r\n\r\n    this._initDOM();\r\n  }\r\n\r\n  _initDOM() {\r\n    this._setupMainList();\r\n\r\n    this.parsedDOM.forEach((treeNode) => this._setupTree(treeNode, 1, this._mainList));\r\n\r\n    this._setupUIElement(this._element, { tabindex: '0' });\r\n\r\n    if (this._options.treeviewColor) {\r\n      this._setupColors();\r\n    }\r\n  }\r\n\r\n  _setupColors() {\r\n    const colorClass = COLORS.includes(this._options.treeviewColor)\r\n      ? `treeview-${this._options.treeviewColor}`\r\n      : 'treeview-primary';\r\n\r\n    return Manipulator.addClass(this._element, colorClass);\r\n  }\r\n\r\n  _getInnerList(ul) {\r\n    return this._innerLists.find((list) => list.element === ul);\r\n  }\r\n\r\n  _generateTree(treeNode, parent) {\r\n    const { name, children, show, id, icon, disabled } = treeNode;\r\n\r\n    const li = element('li');\r\n\r\n    if (children) {\r\n      this._generateGroupItem({ li, name, children, show, id, icon, disabled });\r\n    } else {\r\n      if (disabled) {\r\n        Manipulator.addClass(li, CLASSNAME_DISABLED);\r\n      }\r\n\r\n      li.innerHTML = name;\r\n      if (id) {\r\n        this._setupUIElement(li, { id });\r\n      }\r\n    }\r\n\r\n    parent.appendChild(li);\r\n  }\r\n\r\n  _generateGroupItem({ li, name, children, show, id, icon, disabled }) {\r\n    const a = element('a');\r\n    const ul = element('ul');\r\n\r\n    a.innerHTML = name;\r\n\r\n    if (disabled) {\r\n      Manipulator.addClass(a, CLASSNAME_DISABLED);\r\n    }\r\n\r\n    li.appendChild(a);\r\n    li.appendChild(ul);\r\n\r\n    if (show) {\r\n      Manipulator.addClass(ul, CLASSNAME_SHOW);\r\n    }\r\n\r\n    if (id) {\r\n      this._setupUIElement(ul, { id });\r\n    }\r\n\r\n    if (icon) {\r\n      const toggler = element('span');\r\n      this._setupUIElement(toggler, { 'aria-label': 'toggle' });\r\n      toggler.innerHTML = icon;\r\n\r\n      a.insertBefore(toggler, a.firstChild);\r\n    }\r\n\r\n    children.forEach((childNode) => this._generateTree(childNode, ul));\r\n  }\r\n\r\n  _generateMainList() {\r\n    this._mainList = element('ul');\r\n\r\n    this._element.appendChild(this._mainList);\r\n  }\r\n\r\n  _setupMainList() {\r\n    this._mainList = SelectorEngine.findOne('ul', this._element);\r\n\r\n    this._setupUIElement(this._mainList, { role: 'tree' });\r\n  }\r\n\r\n  _setupTree(treeNode, level, parent) {\r\n    const { node, children } = treeNode;\r\n\r\n    this._setupTreeItem(node, level);\r\n\r\n    this._setupUIElement(node, { tabindex: '-1' });\r\n\r\n    if (children.length > 0) {\r\n      this._setupGroupItem(node, children, level, parent);\r\n    }\r\n  }\r\n\r\n  _setupTreeItem(el, level) {\r\n    this._setupUIElement(el, { 'aria-level': level, role: 'tree-item' });\r\n\r\n    if (this._options.selectable) {\r\n      this._setupCheckbox(el);\r\n    }\r\n\r\n    const selector = this._getSelector(el);\r\n\r\n    Manipulator.addClass(selector, CLASSNAME_CATEGORY);\r\n\r\n    EventHandler.on(el, 'keydown', (e) => this._handleKeyboardNavigation(e, el));\r\n\r\n    if (!Manipulator.hasClass(selector, CLASSNAME_DISABLED)) {\r\n      EventHandler.on(selector, 'click', (e) => this._handleItemClick(e, selector));\r\n    }\r\n  }\r\n\r\n  _setupGroupItem(el, children, level, parent) {\r\n    const a = SelectorEngine.findOne('a', el);\r\n\r\n    const ul = SelectorEngine.findOne('ul', el);\r\n\r\n    if (this._options.line) {\r\n      Manipulator.addClass(ul, CLASSNAME_LINE);\r\n    }\r\n\r\n    let ID;\r\n\r\n    if (!ul.hasAttribute('id')) {\r\n      ID = getUID('level-');\r\n    } else {\r\n      ID = ul.getAttribute('id');\r\n    }\r\n\r\n    const toggler = this._setupToggler(ID, a);\r\n\r\n    this._setupUIElement(ul, { id: ID, role: 'group' });\r\n\r\n    this._setupUIElement(a, { role: 'button', tabindex: '-1' });\r\n\r\n    // Collapse\r\n\r\n    this._setupCollapse(ul, toggler, parent);\r\n\r\n    children.forEach((childNode) => this._setupTree(childNode, level + 1, ul));\r\n  }\r\n\r\n  _setupCollapse(ul, toggler, parent) {\r\n    const show = Manipulator.hasClass(ul, CLASSNAME_SHOW);\r\n    Manipulator.removeClass(ul, CLASSNAME_SHOW);\r\n\r\n    const collapseInstance = new mdb.Collapse(ul, {\r\n      parent: this._options.accordion ? parent : '',\r\n      toggle: show,\r\n    });\r\n\r\n    if (show) {\r\n      this._rotateIcon(toggler, 90);\r\n    }\r\n\r\n    EventHandler.on(ul, EVENT_SHOW_COLLAPSE, (e) => {\r\n      e.stopPropagation();\r\n\r\n      this._rotateIcon(toggler, this._options.rotationAngle);\r\n    });\r\n\r\n    EventHandler.on(ul, EVENT_HIDE_COLLAPSE, (e) => {\r\n      e.stopPropagation();\r\n\r\n      this._rotateIcon(toggler, 0);\r\n\r\n      // Collapse inner lists\r\n\r\n      SelectorEngine.find('ul', ul).forEach((list) => {\r\n        mdb.Collapse.getInstance(list).hide();\r\n      });\r\n    });\r\n\r\n    // Inner lists\r\n    this._innerLists.push({\r\n      element: ul,\r\n      collapse: collapseInstance,\r\n      toggler,\r\n    });\r\n  }\r\n\r\n  _createCheckbox() {\r\n    const checkbox = element('input');\r\n\r\n    this._setupUIElement(checkbox, { type: 'checkbox', 'data-mdb-collapse-init': '' }, [\r\n      'mx-1',\r\n      CLASSNAME_FORM_INPUT,\r\n    ]);\r\n\r\n    return checkbox;\r\n  }\r\n\r\n  _setupCheckbox(el) {\r\n    const checkbox = this._createCheckbox();\r\n\r\n    const selector = this._getSelector(el);\r\n\r\n    if (Manipulator.hasClass(selector, CLASSNAME_DISABLED)) {\r\n      checkbox.setAttribute('disabled', true);\r\n\r\n      const childListElements = SelectorEngine.find('li', el);\r\n\r\n      childListElements.forEach((child) => {\r\n        const selector = this._getSelector(child);\r\n\r\n        Manipulator.addClass(selector, CLASSNAME_DISABLED);\r\n      });\r\n    }\r\n\r\n    if (selector.nodeName === 'A') {\r\n      Manipulator.style(selector, {\r\n        marginLeft: '-1rem',\r\n      });\r\n    }\r\n\r\n    selector.insertBefore(checkbox, selector.firstChild);\r\n    EventHandler.on(checkbox, 'mousedown', (e) => this._handleInputChange(e, el));\r\n    EventHandler.on(checkbox, 'change', (e) => this._handleInputChange(e, el));\r\n  }\r\n\r\n  _handleKeyboardNavigation(e, el) {\r\n    const { keyCode } = e;\r\n    const isTreeviewEvent = [\r\n      UP_ARROW,\r\n      DOWN_ARROW,\r\n      ENTER,\r\n      HOME,\r\n      END,\r\n      RIGHT_ARROW,\r\n      LEFT_ARROW,\r\n    ].includes(keyCode);\r\n\r\n    if (!isTreeviewEvent) {\r\n      return;\r\n    }\r\n\r\n    e.stopPropagation();\r\n\r\n    if (keyCode === TAB) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    switch (keyCode) {\r\n      case ENTER:\r\n        this._handleEnterKey(el);\r\n        break;\r\n\r\n      case HOME:\r\n        this._handleHomeKey();\r\n        break;\r\n\r\n      case END: {\r\n        const children = SelectorEngine.children(this._mainList, 'li');\r\n\r\n        const lastChild = children[children.length - 1];\r\n\r\n        this._handleEndKey(lastChild);\r\n\r\n        break;\r\n      }\r\n\r\n      case RIGHT_ARROW:\r\n        this._handleRightArrow(el);\r\n        break;\r\n\r\n      case LEFT_ARROW:\r\n        this._handleLeftArrow(el);\r\n        break;\r\n\r\n      case DOWN_ARROW:\r\n        this._handleDownArrow(el);\r\n        break;\r\n\r\n      case UP_ARROW:\r\n        this._handleUpArrow(el);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  _handleHomeKey() {\r\n    const li = SelectorEngine.findOne('li', this._mainList);\r\n\r\n    const selector = this._getSelector(li);\r\n\r\n    selector.focus();\r\n  }\r\n\r\n  _handleRightArrow(el) {\r\n    const ul = SelectorEngine.findOne('ul', el);\r\n\r\n    if (ul) {\r\n      const id = ul.getAttribute('id');\r\n\r\n      this.expand(id);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  _handleLeftArrow(el) {\r\n    const ul = SelectorEngine.findOne('ul', el);\r\n\r\n    if (ul) {\r\n      const { collapse } = this._getInnerList(ul);\r\n\r\n      collapse.hide();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  _handleEndKey(lastChild) {\r\n    const ul = SelectorEngine.findOne('ul', lastChild);\r\n\r\n    let lastItem = lastChild;\r\n\r\n    if (ul && Manipulator.hasClass(ul, CLASSNAME_SHOW)) {\r\n      const nextChildren = SelectorEngine.children(ul, 'li');\r\n\r\n      const nextLastChild = nextChildren[nextChildren.length - 1];\r\n\r\n      lastItem = nextLastChild;\r\n\r\n      this._handleEndKey(nextLastChild);\r\n    } else {\r\n      const selector = this._getSelector(lastItem);\r\n\r\n      selector.focus();\r\n    }\r\n  }\r\n\r\n  _handleEnterKey(el) {\r\n    const selector = this._getSelector(el);\r\n\r\n    if (Manipulator.hasClass(selector, CLASSNAME_DISABLED)) {\r\n      return;\r\n    }\r\n\r\n    const listElements = SelectorEngine.find('li', this._mainList);\r\n\r\n    listElements.forEach((el) => {\r\n      Manipulator.removeClass(el, CLASSNAME_SELECTED);\r\n\r\n      const a = SelectorEngine.findOne('a', el);\r\n\r\n      if (a) {\r\n        Manipulator.removeClass(a, CLASSNAME_SELECTED);\r\n      }\r\n    });\r\n\r\n    Manipulator.addClass(selector, CLASSNAME_SELECTED);\r\n  }\r\n\r\n  _handleUpArrow(el) {\r\n    const [prevEl] = SelectorEngine.prev(el, 'li');\r\n\r\n    if (!prevEl) {\r\n      const [prevParent] = SelectorEngine.parents(el, 'li');\r\n\r\n      if (!prevParent) {\r\n        return;\r\n      }\r\n\r\n      const selector = this._getSelector(prevParent);\r\n\r\n      selector.focus();\r\n\r\n      return;\r\n    }\r\n\r\n    const prevUl = SelectorEngine.findOne('ul', prevEl);\r\n\r\n    if (prevUl) {\r\n      if (Manipulator.hasClass(prevUl, CLASSNAME_SHOW)) {\r\n        const prevUlChildren = SelectorEngine.children(prevUl, 'li');\r\n\r\n        const lastChild = prevUlChildren[prevUlChildren.length - 1];\r\n\r\n        lastChild.focus();\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    const selector = this._getSelector(prevEl);\r\n\r\n    selector.focus();\r\n  }\r\n\r\n  _handleDownArrow(el) {\r\n    let nextEl;\r\n\r\n    const elUl = SelectorEngine.findOne('ul', el);\r\n\r\n    if (elUl) {\r\n      if (!Manipulator.hasClass(elUl, CLASSNAME_SHOW)) {\r\n        [nextEl] = SelectorEngine.next(el, 'li');\r\n\r\n        if (!nextEl) {\r\n          return;\r\n        }\r\n\r\n        const selector = this._getSelector(nextEl);\r\n\r\n        selector.focus();\r\n      } else {\r\n        nextEl = SelectorEngine.findOne('li', elUl);\r\n\r\n        if (!nextEl) {\r\n          return;\r\n        }\r\n\r\n        const selector = this._getSelector(nextEl);\r\n\r\n        selector.focus();\r\n      }\r\n    } else {\r\n      [nextEl] = SelectorEngine.next(el, 'li');\r\n\r\n      if (!nextEl) {\r\n        const [parentEl] = SelectorEngine.parents(el, 'li');\r\n\r\n        const [sibling] = SelectorEngine.next(parentEl, 'li');\r\n\r\n        if (!sibling) {\r\n          return;\r\n        }\r\n\r\n        const selector = this._getSelector(sibling);\r\n\r\n        selector.focus();\r\n\r\n        return;\r\n      }\r\n\r\n      const selector = this._getSelector(nextEl);\r\n\r\n      selector.focus();\r\n    }\r\n  }\r\n\r\n  _handleInputChange(e, el) {\r\n    let checked = e.target.checked;\r\n\r\n    const isCollapse = Manipulator.getDataAttributes(e.target.parentNode).mdbCollapseInit === '';\r\n\r\n    if (isCollapse) {\r\n      checked = !checked;\r\n    }\r\n\r\n    const childCheckboxes = SelectorEngine.find(SELECTOR_CHECKBOX, el);\r\n\r\n    childCheckboxes.forEach((checkbox) => {\r\n      if (!checkbox.disabled) {\r\n        checkbox.checked = checked;\r\n      }\r\n    });\r\n\r\n    const parents = SelectorEngine.parents(el, 'li');\r\n\r\n    const [firstParent] = parents;\r\n\r\n    const parentCheckbox = SelectorEngine.findOne(SELECTOR_CHECKBOX, firstParent);\r\n\r\n    if (firstParent && !parentCheckbox.checked && checked) {\r\n      parents.forEach((parent) => {\r\n        const parentInput = SelectorEngine.findOne(SELECTOR_CHECKBOX, parent);\r\n        const childrenCheckboxes = SelectorEngine.find(SELECTOR_CHECKBOX, parent);\r\n        const isEveryChildChecked = childrenCheckboxes.every((checkbox, index) => {\r\n          if (index === 0) {\r\n            return true;\r\n          }\r\n          return checkbox.checked;\r\n        });\r\n\r\n        if (isEveryChildChecked) {\r\n          parentInput.checked = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (firstParent && parentCheckbox.checked && !checked) {\r\n      parents.forEach((parent) => {\r\n        const parentInput = SelectorEngine.findOne(SELECTOR_CHECKBOX, parent);\r\n\r\n        parentInput.checked = false;\r\n      });\r\n    }\r\n\r\n    EventHandler.trigger(this._element, EVENT_ITEM_SELECTED, {\r\n      items: this.selectedItems,\r\n    });\r\n  }\r\n\r\n  _handleItemClick(e, el) {\r\n    e.stopPropagation();\r\n\r\n    const listElements = SelectorEngine.find('li', this._mainList);\r\n\r\n    listElements.forEach((el) => {\r\n      Manipulator.removeClass(el, CLASSNAME_SELECTED);\r\n\r\n      const a = SelectorEngine.findOne('a', el);\r\n\r\n      if (a) {\r\n        Manipulator.removeClass(a, CLASSNAME_SELECTED);\r\n      }\r\n    });\r\n\r\n    Manipulator.addClass(el, CLASSNAME_SELECTED);\r\n\r\n    EventHandler.trigger(this._element, EVENT_ITEM_ACTIVE, {\r\n      item: el,\r\n    });\r\n  }\r\n\r\n  _setupToggler(id, a) {\r\n    const span = SelectorEngine.findOne(SELECTOR_ICON_SPAN, a);\r\n\r\n    if (span) {\r\n      const selector = this._options.openOnClick ? a : span;\r\n\r\n      Manipulator.setDataAttribute(selector, 'collapseInit', '');\r\n      this._setupUIElement(selector, {\r\n        'data-mdb-collapse-init': '',\r\n        'data-mdb-target': `#${id}`,\r\n      });\r\n\r\n      return span;\r\n    }\r\n\r\n    return this._createToggler(id, a);\r\n  }\r\n\r\n  _createToggler(id, a) {\r\n    const toggler = element('span');\r\n\r\n    const selector = this._options.openOnClick ? a : toggler;\r\n\r\n    this._setupUIElement(toggler, { 'aria-label': 'toggle' });\r\n\r\n    toggler.innerHTML = '<i class=\"fas fa-angle-right mx-1\"></i>';\r\n\r\n    Manipulator.setDataAttribute(selector, 'collapseInit', '');\r\n    this._setupUIElement(selector, {\r\n      'data-mdb-collapse-init': '',\r\n      'data-mdb-target': `#${id}`,\r\n    });\r\n\r\n    a.insertBefore(toggler, a.firstChild);\r\n\r\n    return toggler;\r\n  }\r\n\r\n  _parseDOM(el) {\r\n    const [list] = SelectorEngine.children(el, 'ul');\r\n\r\n    if (!list) return [];\r\n\r\n    return SelectorEngine.children(list, 'li').map((node) => {\r\n      const children = this._parseDOM(node);\r\n\r\n      const item = {\r\n        name: node.innerText ? node.innerText.split('\\n')[0] : '',\r\n        node,\r\n        children,\r\n      };\r\n\r\n      if (item.children.length > 0) {\r\n        const a = SelectorEngine.findOne('a', node);\r\n\r\n        item.name = a.innerText ? a.innerText.split('\\n')[0] : '';\r\n      }\r\n\r\n      this._stringCollection.set(item.node, item.name);\r\n\r\n      return item;\r\n    });\r\n  }\r\n\r\n  _rotateIcon(toggler, angle) {\r\n    const toggleIcon = SelectorEngine.findOne(SELECTOR_TOGGLER_ICON, toggler);\r\n\r\n    if (toggleIcon) {\r\n      Manipulator.style(toggleIcon, {\r\n        transform: `rotate(${angle}deg)`,\r\n      });\r\n    }\r\n  }\r\n\r\n  _setupUIElement(el, attrs = {}, classnames = []) {\r\n    const attributeNames = Object.keys(attrs);\r\n\r\n    attributeNames.forEach((name) => {\r\n      const value = attrs[name];\r\n\r\n      el.setAttribute(name, value);\r\n    });\r\n\r\n    classnames.forEach((name) => {\r\n      Manipulator.addClass(el, name);\r\n    });\r\n  }\r\n\r\n  _getSelector(el) {\r\n    const a = SelectorEngine.findOne('a', el);\r\n\r\n    return a || el;\r\n  }\r\n\r\n  _normalize(string) {\r\n    return string.trim().toLowerCase();\r\n  }\r\n\r\n  _getConfig(options) {\r\n    const config = {\r\n      ...Default,\r\n      ...Manipulator.getDataAttributes(this._element),\r\n      ...options,\r\n    };\r\n    typeCheckConfig(NAME, config, DefaultType);\r\n    return config;\r\n  }\r\n\r\n  // Static\r\n\r\n  static getInstance(element) {\r\n    return Data.getData(element, DATA_KEY);\r\n  }\r\n\r\n  static jQueryInterface(config) {\r\n    return this.each(function () {\r\n      let data = Data.getData(this, DATA_KEY);\r\n      const _config = typeof config === 'object' && config;\r\n      if (!data) {\r\n        data = new Treeview(this, _config);\r\n      }\r\n      if (typeof config === 'string') {\r\n        if (typeof data[config] === 'undefined') {\r\n          throw new TypeError(`No method named \"${config}\"`);\r\n        }\r\n        data[config](this);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Data Api implementation - auto initialization\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nSelectorEngine.find(SELECTOR_DATA_INIT).forEach((treeview) => {\r\n  let instance = Treeview.getInstance(treeview);\r\n  if (!instance) {\r\n    instance = new Treeview(treeview);\r\n  }\r\n  return instance;\r\n});\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * jQuery\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nonDOMContentLoaded(() => {\r\n  const $ = getjQuery();\r\n\r\n  if ($) {\r\n    const JQUERY_NO_CONFLICT = $.fn[NAME];\r\n    $.fn[NAME] = Treeview.jQueryInterface;\r\n    $.fn[NAME].Constructor = Treeview;\r\n    $.fn[NAME].noConflict = () => {\r\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\r\n      return Treeview.jQueryInterface;\r\n    };\r\n  }\r\n});\r\n\r\nexport default Treeview;\r\n"],"names":["getUID","prefix","Math","floor","random","document","getElementById","getjQuery","jQuery","window","body","hasAttribute","documentElement","dir","element","tag","createElement","mapData","storeData","id","set","key","data","get","keyProperties","Data","setData","instance","getData","removeData","delete","normalizeData","val","Number","toString","normalizeDataKey","replace","chr","toLowerCase","Manipulator","setDataAttribute","value","setAttribute","removeDataAttribute","removeAttribute","getDataAttributes","attributes","dataset","Object","keys","filter","startsWith","forEach","pureKey","charAt","slice","length","getDataAttribute","getAttribute","offset","rect","getBoundingClientRect","top","scrollTop","left","scrollLeft","position","offsetTop","offsetLeft","style","assign","toggleClass","className","classList","contains","remove","add","addClass","addStyle","property","removeClass","hasClass","findElements","Element","prototype","querySelectorAll","findElement","querySelector","defaultPreventedPreservedOnDispatch","e","CustomEvent","cancelable","addEventListener","preventDefault","dispatchEvent","defaultPrevented","scopeSelectorRegex","_","selector","test","this","hasId","Boolean","nodeList","matches","find","call","findOne","SelectorEngine","closest","concat","findFn","children","child","parents","ancestor","parentNode","nodeType","Node","ELEMENT_NODE","push","prev","previous","previousElementSibling","next","nextElementSibling","$","namespaceRegex","stripNameRegex","stripUidRegex","eventRegistry","uidEvent","customEvents","mouseenter","mouseleave","nativeEvents","getUidEvent","uid","getEvent","findHandler","events","handler","delegationSelector","uidEventList","i","len","event","originalHandler","normalizeParams","originalTypeEvent","delegationFn","delegation","typeEvent","custom","indexOf","addHandler","oneOff","handlers","previousFn","fn","domElements","target","EventHandler","off","type","apply","bootstrapDelegationHandler","bootstrapHandler","removeHandler","removeEventListener","on","one","inNamespace","isNamespace","elementEvent","namespace","storeElementEvent","handlerKey","removeNamespacedHandlers","keyHandlers","trigger","args","isNative","jQueryEvent","bubbles","nativeDispatch","evt","Event","isPropagationStopped","isImmediatePropagationStopped","isDefaultPrevented","createEvent","initEvent","defineProperty","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","HOME","END","ENTER","NAME","DATA_KEY","SELECTOR_CHECKBOX","CLASSNAME_SHOW","CLASSNAME_SELECTED","CLASSNAME_CATEGORY","CLASSNAME_DISABLED","COLORS","DefaultType","structure","openOnClick","selectable","accordion","rotationAngle","treeviewColor","line","Default","Treeview","constructor","_element","_options","_getConfig","_innerLists","_stringCollection","Map","_init","_checkboxes","_mainList","_listElements","parsedDOM","_parseDOM","selectedItems","checkbox","checked","map","parent","dispose","item","list","collapse","toggler","el","_getInnerList","hide","expand","ID","show","phrase","setTimeout","text","node","stringToSearch","_normalize","includes","ul","isExpanded","hasChildren","initMDB","Collapse","mdb","_initJS","_initDOM","keyCode","_handleHomeKey","_generateMainList","treeNode","_generateTree","_setupMainList","_setupTree","_setupUIElement","tabindex","_setupColors","colorClass","name","icon","disabled","li","_generateGroupItem","innerHTML","appendChild","a","insertBefore","firstChild","childNode","role","level","_setupTreeItem","_setupGroupItem","_setupCheckbox","_getSelector","_handleKeyboardNavigation","_handleItemClick","_setupToggler","_setupCollapse","collapseInstance","toggle","_rotateIcon","stopPropagation","getInstance","_createCheckbox","nodeName","marginLeft","_handleInputChange","_handleEnterKey","lastChild","_handleEndKey","_handleRightArrow","_handleLeftArrow","_handleDownArrow","_handleUpArrow","focus","lastItem","nextChildren","nextLastChild","prevEl","prevParent","prevUl","prevUlChildren","nextEl","elUl","parentEl","sibling","mdbCollapseInit","firstParent","parentCheckbox","parentInput","every","index","items","span","_createToggler","innerText","split","angle","toggleIcon","transform","attrs","classnames","string","trim","options","config","componentName","configTypes","expectedTypes","valueType","obj","match","toType","RegExp","Error","toUpperCase","typeCheckConfig","jQueryInterface","each","TypeError","callback","treeview","JQUERY_NO_CONFLICT","Constructor","noConflict","readyState"],"mappings":"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"}