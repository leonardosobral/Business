{"version":3,"file":"dummy.min.js","sources":["../../../src/plugins/dummy/js/mdb/util/index.js","../../../src/plugins/dummy/js/mdb/dom/data.js","../../../src/plugins/dummy/js/mdb/dom/manipulator.js","../../../src/plugins/dummy/js/mdb/dom/polyfill.js","../../../src/plugins/dummy/js/mdb/dom/selector-engine.js","../../../src/plugins/dummy/js/words.js","../../../src/plugins/dummy/js/dummy.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-beta1): util/index.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst MAX_UID = 1000000;\r\nconst MILLISECONDS_MULTIPLIER = 1000;\r\nconst TRANSITION_END = 'transitionend';\r\n\r\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\r\nconst toType = (obj) => {\r\n  if (obj === null || obj === undefined) {\r\n    return `${obj}`;\r\n  }\r\n\r\n  return {}.toString\r\n    .call(obj)\r\n    .match(/\\s([a-z]+)/i)[1]\r\n    .toLowerCase();\r\n};\r\n\r\n/**\r\n * --------------------------------------------------------------------------\r\n * Public Util Api\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nconst getUID = (prefix) => {\r\n  do {\r\n    prefix += Math.floor(Math.random() * MAX_UID);\r\n  } while (document.getElementById(prefix));\r\n\r\n  return prefix;\r\n};\r\n\r\nconst getSelector = (element) => {\r\n  let selector = element.getAttribute('data-mdb-target');\r\n\r\n  if (!selector || selector === '#') {\r\n    const hrefAttr = element.getAttribute('href');\r\n\r\n    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null;\r\n  }\r\n\r\n  return selector;\r\n};\r\n\r\nconst getSelectorFromElement = (element) => {\r\n  const selector = getSelector(element);\r\n\r\n  if (selector) {\r\n    return document.querySelector(selector) ? selector : null;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst getElementFromSelector = (element) => {\r\n  const selector = getSelector(element);\r\n\r\n  return selector ? document.querySelector(selector) : null;\r\n};\r\n\r\nconst getTransitionDurationFromElement = (element) => {\r\n  if (!element) {\r\n    return 0;\r\n  }\r\n\r\n  // Get transition-duration of the element\r\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element);\r\n\r\n  const floatTransitionDuration = Number.parseFloat(transitionDuration);\r\n  const floatTransitionDelay = Number.parseFloat(transitionDelay);\r\n\r\n  // Return 0 if element or transition duration is not found\r\n  if (!floatTransitionDuration && !floatTransitionDelay) {\r\n    return 0;\r\n  }\r\n\r\n  // If multiple durations are defined, take the first\r\n  transitionDuration = transitionDuration.split(',')[0];\r\n  transitionDelay = transitionDelay.split(',')[0];\r\n\r\n  return (\r\n    (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) *\r\n    MILLISECONDS_MULTIPLIER\r\n  );\r\n};\r\n\r\nconst triggerTransitionEnd = (element) => {\r\n  element.dispatchEvent(new Event(TRANSITION_END));\r\n};\r\n\r\nconst isElement = (obj) => (obj[0] || obj).nodeType;\r\n\r\nconst emulateTransitionEnd = (element, duration) => {\r\n  let called = false;\r\n  const durationPadding = 5;\r\n  const emulatedDuration = duration + durationPadding;\r\n\r\n  function listener() {\r\n    called = true;\r\n    element.removeEventListener(TRANSITION_END, listener);\r\n  }\r\n\r\n  element.addEventListener(TRANSITION_END, listener);\r\n  setTimeout(() => {\r\n    if (!called) {\r\n      triggerTransitionEnd(element);\r\n    }\r\n  }, emulatedDuration);\r\n};\r\n\r\nconst typeCheckConfig = (componentName, config, configTypes) => {\r\n  Object.keys(configTypes).forEach((property) => {\r\n    const expectedTypes = configTypes[property];\r\n    const value = config[property];\r\n    const valueType = value && isElement(value) ? 'element' : toType(value);\r\n\r\n    if (!new RegExp(expectedTypes).test(valueType)) {\r\n      throw new Error(\r\n        `${componentName.toUpperCase()}: ` +\r\n          `Option \"${property}\" provided type \"${valueType}\" ` +\r\n          `but expected type \"${expectedTypes}\".`\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\nconst isVisible = (element) => {\r\n  if (!element) {\r\n    return false;\r\n  }\r\n\r\n  if (element.style && element.parentNode && element.parentNode.style) {\r\n    const elementStyle = getComputedStyle(element);\r\n    const parentNodeStyle = getComputedStyle(element.parentNode);\r\n\r\n    return (\r\n      elementStyle.display !== 'none' &&\r\n      parentNodeStyle.display !== 'none' &&\r\n      elementStyle.visibility !== 'hidden'\r\n    );\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst findShadowRoot = (element) => {\r\n  if (!document.documentElement.attachShadow) {\r\n    return null;\r\n  }\r\n\r\n  // Can find the shadow root otherwise it'll return the document\r\n  if (typeof element.getRootNode === 'function') {\r\n    const root = element.getRootNode();\r\n    return root instanceof ShadowRoot ? root : null;\r\n  }\r\n\r\n  if (element instanceof ShadowRoot) {\r\n    return element;\r\n  }\r\n\r\n  // when we don't find a shadow root\r\n  if (!element.parentNode) {\r\n    return null;\r\n  }\r\n\r\n  return findShadowRoot(element.parentNode);\r\n};\r\n\r\nconst noop = () => function () {};\r\n\r\nconst reflow = (element) => element.offsetHeight;\r\n\r\nconst getjQuery = () => {\r\n  const { jQuery } = window;\r\n\r\n  if (jQuery && !document.body.hasAttribute('data-mdb-no-jquery')) {\r\n    return jQuery;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst onDOMContentLoaded = (callback) => {\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', callback);\r\n  } else {\r\n    callback();\r\n  }\r\n};\r\n\r\nconst isRTL = document.documentElement.dir === 'rtl';\r\n\r\nconst array = (collection) => {\r\n  return Array.from(collection);\r\n};\r\n\r\nconst element = (tag) => {\r\n  return document.createElement(tag);\r\n};\r\n\r\nexport {\r\n  getjQuery,\r\n  TRANSITION_END,\r\n  getUID,\r\n  getSelectorFromElement,\r\n  getElementFromSelector,\r\n  getTransitionDurationFromElement,\r\n  triggerTransitionEnd,\r\n  isElement,\r\n  emulateTransitionEnd,\r\n  typeCheckConfig,\r\n  isVisible,\r\n  findShadowRoot,\r\n  noop,\r\n  reflow,\r\n  array,\r\n  element,\r\n  onDOMContentLoaded,\r\n  isRTL,\r\n};\r\n","/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-alpha1): dom/data.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Constants\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nconst mapData = (() => {\r\n  const storeData = {};\r\n  let id = 1;\r\n  return {\r\n    set(element, key, data) {\r\n      if (typeof element[key] === 'undefined') {\r\n        element[key] = {\r\n          key,\r\n          id,\r\n        };\r\n        id++;\r\n      }\r\n\r\n      storeData[element[key].id] = data;\r\n    },\r\n    get(element, key) {\r\n      if (!element || typeof element[key] === 'undefined') {\r\n        return null;\r\n      }\r\n\r\n      const keyProperties = element[key];\r\n      if (keyProperties.key === key) {\r\n        return storeData[keyProperties.id];\r\n      }\r\n\r\n      return null;\r\n    },\r\n    delete(element, key) {\r\n      if (typeof element[key] === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      const keyProperties = element[key];\r\n      if (keyProperties.key === key) {\r\n        delete storeData[keyProperties.id];\r\n        delete element[key];\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\nconst Data = {\r\n  setData(instance, key, data) {\r\n    mapData.set(instance, key, data);\r\n  },\r\n  getData(instance, key) {\r\n    return mapData.get(instance, key);\r\n  },\r\n  removeData(instance, key) {\r\n    mapData.delete(instance, key);\r\n  },\r\n};\r\n\r\nexport default Data;\r\n","/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-beta1): dom/manipulator.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nfunction normalizeData(val) {\r\n  if (val === 'true') {\r\n    return true;\r\n  }\r\n\r\n  if (val === 'false') {\r\n    return false;\r\n  }\r\n\r\n  if (val === Number(val).toString()) {\r\n    return Number(val);\r\n  }\r\n\r\n  if (val === '' || val === 'null') {\r\n    return null;\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\nfunction normalizeDataKey(key) {\r\n  return key.replace(/[A-Z]/g, (chr) => `-${chr.toLowerCase()}`);\r\n}\r\n\r\nconst Manipulator = {\r\n  setDataAttribute(element, key, value) {\r\n    element.setAttribute(`data-mdb-${normalizeDataKey(key)}`, value);\r\n  },\r\n\r\n  removeDataAttribute(element, key) {\r\n    element.removeAttribute(`data-mdb-${normalizeDataKey(key)}`);\r\n  },\r\n\r\n  getDataAttributes(element) {\r\n    if (!element) {\r\n      return {};\r\n    }\r\n\r\n    const attributes = {\r\n      ...element.dataset,\r\n    };\r\n\r\n    Object.keys(attributes)\r\n      .filter((key) => key.startsWith('mdb'))\r\n      .forEach((key) => {\r\n        let pureKey = key.replace(/^mdb/, '');\r\n        pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);\r\n        attributes[pureKey] = normalizeData(attributes[key]);\r\n      });\r\n\r\n    return attributes;\r\n  },\r\n\r\n  getDataAttribute(element, key) {\r\n    return normalizeData(element.getAttribute(`data-mdb-${normalizeDataKey(key)}`));\r\n  },\r\n\r\n  offset(element) {\r\n    const rect = element.getBoundingClientRect();\r\n\r\n    return {\r\n      top: rect.top + document.body.scrollTop,\r\n      left: rect.left + document.body.scrollLeft,\r\n    };\r\n  },\r\n\r\n  position(element) {\r\n    return {\r\n      top: element.offsetTop,\r\n      left: element.offsetLeft,\r\n    };\r\n  },\r\n\r\n  style(element, style) {\r\n    Object.assign(element.style, style);\r\n  },\r\n\r\n  toggleClass(element, className) {\r\n    if (!element) {\r\n      return;\r\n    }\r\n\r\n    if (element.classList.contains(className)) {\r\n      element.classList.remove(className);\r\n    } else {\r\n      element.classList.add(className);\r\n    }\r\n  },\r\n\r\n  addClass(element, className) {\r\n    if (element.classList.contains(className)) return;\r\n    element.classList.add(className);\r\n  },\r\n\r\n  addStyle(element, style) {\r\n    Object.keys(style).forEach((property) => {\r\n      element.style[property] = style[property];\r\n    });\r\n  },\r\n\r\n  removeClass(element, className) {\r\n    if (!element.classList.contains(className)) return;\r\n    element.classList.remove(className);\r\n  },\r\n\r\n  hasClass(element, className) {\r\n    return element.classList.contains(className);\r\n  },\r\n};\r\n\r\nexport default Manipulator;\r\n","/* istanbul ignore file */\r\n\r\n/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-alpha1): dom/polyfill.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport { getUID } from '../util/index';\r\n\r\nlet findElements = Element.prototype.querySelectorAll;\r\nlet findElement = Element.prototype.querySelector;\r\n\r\n// MSEdge resets defaultPrevented flag upon dispatchEvent call if at least one listener is attached\r\nconst defaultPreventedPreservedOnDispatch = (() => {\r\n  const e = new CustomEvent('Bootstrap', {\r\n    cancelable: true,\r\n  });\r\n\r\n  const element = document.createElement('div');\r\n  element.addEventListener('Bootstrap', () => null);\r\n\r\n  e.preventDefault();\r\n  element.dispatchEvent(e);\r\n  return e.defaultPrevented;\r\n})();\r\n\r\nconst scopeSelectorRegex = /:scope\\b/;\r\nconst supportScopeQuery = (() => {\r\n  const element = document.createElement('div');\r\n\r\n  try {\r\n    element.querySelectorAll(':scope *');\r\n  } catch (_) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n})();\r\n\r\nif (!supportScopeQuery) {\r\n  findElements = function (selector) {\r\n    if (!scopeSelectorRegex.test(selector)) {\r\n      return this.querySelectorAll(selector);\r\n    }\r\n\r\n    const hasId = Boolean(this.id);\r\n\r\n    if (!hasId) {\r\n      this.id = getUID('scope');\r\n    }\r\n\r\n    let nodeList = null;\r\n    try {\r\n      selector = selector.replace(scopeSelectorRegex, `#${this.id}`);\r\n      nodeList = this.querySelectorAll(selector);\r\n    } finally {\r\n      if (!hasId) {\r\n        this.removeAttribute('id');\r\n      }\r\n    }\r\n\r\n    return nodeList;\r\n  };\r\n\r\n  findElement = function (selector) {\r\n    if (!scopeSelectorRegex.test(selector)) {\r\n      return this.querySelector(selector);\r\n    }\r\n\r\n    const matches = find.call(this, selector);\r\n\r\n    if (typeof matches[0] !== 'undefined') {\r\n      return matches[0];\r\n    }\r\n\r\n    return null;\r\n  };\r\n}\r\n\r\nconst find = findElements;\r\nconst findOne = findElement;\r\n\r\nexport { find, findOne, defaultPreventedPreservedOnDispatch };\r\n","/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v5.0.0-alpha1): dom/selector-engine.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport { find as findFn, findOne } from './polyfill';\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Constants\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nconst NODE_TEXT = 3;\r\n\r\nconst SelectorEngine = {\r\n  closest(element, selector) {\r\n    return element.closest(selector);\r\n  },\r\n\r\n  matches(element, selector) {\r\n    return element.matches(selector);\r\n  },\r\n\r\n  find(selector, element = document.documentElement) {\r\n    return [].concat(...findFn.call(element, selector));\r\n  },\r\n\r\n  findOne(selector, element = document.documentElement) {\r\n    return findOne.call(element, selector);\r\n  },\r\n\r\n  children(element, selector) {\r\n    const children = [].concat(...element.children);\r\n\r\n    return children.filter((child) => child.matches(selector));\r\n  },\r\n\r\n  parents(element, selector) {\r\n    const parents = [];\r\n\r\n    let ancestor = element.parentNode;\r\n\r\n    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\r\n      if (this.matches(ancestor, selector)) {\r\n        parents.push(ancestor);\r\n      }\r\n\r\n      ancestor = ancestor.parentNode;\r\n    }\r\n\r\n    return parents;\r\n  },\r\n\r\n  prev(element, selector) {\r\n    let previous = element.previousElementSibling;\r\n\r\n    while (previous) {\r\n      if (previous.matches(selector)) {\r\n        return [previous];\r\n      }\r\n\r\n      previous = previous.previousElementSibling;\r\n    }\r\n\r\n    return [];\r\n  },\r\n\r\n  next(element, selector) {\r\n    let next = element.nextElementSibling;\r\n\r\n    while (next) {\r\n      if (this.matches(next, selector)) {\r\n        return [next];\r\n      }\r\n\r\n      next = next.nextElementSibling;\r\n    }\r\n\r\n    return [];\r\n  },\r\n};\r\n\r\nexport default SelectorEngine;\r\n","const WORDS = [\r\n  'radioelement',\r\n  'actinolitic',\r\n  'chromic',\r\n  'strikeboard',\r\n  'cloverleaf',\r\n  'trimming',\r\n  'heedfulness',\r\n  'phenylamine',\r\n  'alloplasmatic',\r\n  'winnipeg',\r\n  'savour',\r\n  'airwoman',\r\n  'compute',\r\n  'nitrobenzene',\r\n  'coinstantaneously',\r\n  'havel',\r\n  'stimulatingly',\r\n  'superextreme',\r\n  'noyau',\r\n  'stark',\r\n  'preelect',\r\n  'scripture',\r\n  'rubric',\r\n  'revoted',\r\n  'melchizedek',\r\n  'intertidal',\r\n  'immorally',\r\n  'spacious',\r\n  'dodecastylar',\r\n  'modulate',\r\n  'botulinuses',\r\n  'aimlessly',\r\n  'mirkier',\r\n  'cadman',\r\n  'yokel',\r\n  'cactaceous',\r\n  'blame',\r\n  'bridelike',\r\n  'unexported',\r\n  'diapedesis',\r\n  'irritate',\r\n  'accuracy',\r\n  'keyman',\r\n  'habitudinal',\r\n  'outraved',\r\n  'militancy',\r\n  'contrive',\r\n  'unacetic',\r\n  'homoeopath',\r\n  'snippiness',\r\n  'nonnobility',\r\n  'stambul',\r\n  'schumpeter',\r\n  'eulis',\r\n  'gavin',\r\n  'rainproof',\r\n  'philonis',\r\n  'xograph',\r\n  'ester',\r\n  'anaglyph',\r\n  'equities',\r\n  'biosphere',\r\n  'premeditatingly',\r\n  'marg',\r\n  'stephanie',\r\n  'dauk',\r\n  'nomad',\r\n  'bootie',\r\n  'clark',\r\n  'spouter',\r\n  'crackly',\r\n  'corticate',\r\n  'hipping',\r\n  'contemptuous',\r\n  'unfree',\r\n  'swagman',\r\n  'bedizenment',\r\n  'snakeweed',\r\n  'reoperate',\r\n  'valorise',\r\n  'dido',\r\n  'cated',\r\n  'anatolian',\r\n  'stupefy',\r\n  'camaraderie',\r\n  'kenny',\r\n  'sweat',\r\n  'vaporimeter',\r\n  'lineamental',\r\n  'overcriticized',\r\n  'nonphilosophy',\r\n  'politicalize',\r\n  'professed',\r\n  'milstein',\r\n  'unit',\r\n  'revaccinate',\r\n  'parochial',\r\n  'soc',\r\n  'cudbear',\r\n  'intercarpellary',\r\n  'precociousness',\r\n  'pretaste',\r\n  'holophyte',\r\n  'scarless',\r\n  'rekindle',\r\n  'reappearance',\r\n  'dimensionless',\r\n  'julienne',\r\n  'gasholder',\r\n  'fluidally',\r\n  'teutonism',\r\n  'legroom',\r\n  'adolescent',\r\n  'camila',\r\n  'agana',\r\n  'overcertify',\r\n  'disembowelment',\r\n  'anemochorous',\r\n  'discreditability',\r\n  'unincludible',\r\n  'folia',\r\n  'frankfurter',\r\n  'maravedi',\r\n  'tribunitial',\r\n  'boulle',\r\n  'pretincture',\r\n  'hermetical',\r\n  'impanel',\r\n  'underyoke',\r\n  'beset',\r\n  'scoff',\r\n  'exophthalmos',\r\n  'manly',\r\n  'nahant',\r\n  'sandarac',\r\n  'diseasing',\r\n  'dolphinfishes',\r\n  'desulfurization',\r\n  'inescapableness',\r\n  'solum',\r\n  'outthrow',\r\n  'rareripe',\r\n  'highness',\r\n  'synonymized',\r\n  'attractive',\r\n  'residency',\r\n  'predaciou',\r\n  'dosshouse',\r\n  'crookesite',\r\n  'unmoldy',\r\n  'drawability',\r\n  'comedical',\r\n  'chromoplasmic',\r\n  'unillusioned',\r\n  'altimetrical',\r\n  'araucan',\r\n  'conveyor',\r\n  'laggardness',\r\n  'unpolitely',\r\n  'strutting',\r\n  'bloodwort',\r\n  'hysteretically',\r\n  'baalistic',\r\n  'contritely',\r\n  'nonexcavation',\r\n  'mdoc',\r\n  'benthamite',\r\n  'moseley',\r\n  'coercively',\r\n  'horologe',\r\n  'bivalvular',\r\n  'agribusiness',\r\n  'norbert',\r\n  'invigorated',\r\n  'imprudently',\r\n  'trippingly',\r\n  'mds',\r\n  'unabatable',\r\n  'assidaean',\r\n  'glandes',\r\n  'reidentify',\r\n  'fluffier',\r\n  'geek',\r\n  'unstunned',\r\n  'battue',\r\n  'innutritious',\r\n  'terminism',\r\n  'cannibalistically',\r\n  'flowerage',\r\n  'duopoly',\r\n  'jurisp',\r\n  'exitance',\r\n  'menace',\r\n  'speciously',\r\n  'ungossiping',\r\n  'realizable',\r\n  'candlenut',\r\n  'uncombinational',\r\n  'semifrontier',\r\n  'pseudopolitical',\r\n  'atomize',\r\n  'brunetness',\r\n  'reperused',\r\n  'leverrier',\r\n  'unaccustomed',\r\n  'aeaea',\r\n  'monopsony',\r\n  'posttibial',\r\n  'filbert',\r\n  'pellucidity',\r\n  'italian',\r\n  'preinstructional',\r\n  'balkanised',\r\n  'sanctity',\r\n  'multigravida',\r\n  'study',\r\n  'hulloo',\r\n  'gyges',\r\n  'tiglinic',\r\n  'dubonnet',\r\n  'postfebrile',\r\n  'cotype',\r\n  'abbreviator',\r\n  'saffian',\r\n  'zogan',\r\n  'pfitzner',\r\n  'decampment',\r\n  'predictated',\r\n  'prejudgement',\r\n  'gormandising',\r\n  'thoreau',\r\n  'ruralised',\r\n  'laryngeal',\r\n  'coleridgian',\r\n  'azerbaijani',\r\n  'featherlike',\r\n  'alogi',\r\n  'dunstable',\r\n  'punish',\r\n  'energistic',\r\n  'newsbeat',\r\n  'keswick',\r\n  'noncommutative',\r\n  'totable',\r\n  'pothunting',\r\n  'steatite',\r\n  'typikon',\r\n  'unanswering',\r\n  'repositories',\r\n  'peduncle',\r\n  'stirpiculture',\r\n  'varietally',\r\n  'burletta',\r\n  'salvia',\r\n  'farraginous',\r\n  'anteroom',\r\n  'rhamnaceous',\r\n  'southernwood',\r\n  'hyporight',\r\n  'dysteleological',\r\n  'kilopound',\r\n  'hyperbatic',\r\n  'barquisimeto',\r\n  'unfitly',\r\n  'humorless',\r\n  'untackling',\r\n  'doom',\r\n  'beefless',\r\n  'gruesomeness',\r\n  'yeastlike',\r\n  'leucosis',\r\n  'enrober',\r\n  'canton',\r\n  'gutterlike',\r\n  'plesiosaur',\r\n  'shaksperian',\r\n  'ramayana',\r\n  'factorize',\r\n  'currieries',\r\n  'carracci',\r\n  'unrevoked',\r\n  'purposed',\r\n  'kline',\r\n  'sanderling',\r\n  'inculpatory',\r\n  'postgenial',\r\n  'holism',\r\n  'clearly',\r\n  'alfur',\r\n  'tuberless',\r\n  'perugino',\r\n  'instilment',\r\n  'reamendment',\r\n  'trinitrophenylmethylnitramine',\r\n  'intertrafficking',\r\n  'predeterminate',\r\n  'cataplane',\r\n  'bleariest',\r\n];\r\n\r\nexport default WORDS;\r\n","import { typeCheckConfig, getjQuery, getUID, onDOMContentLoaded } from './mdb/util/index';\r\nimport Data from './mdb/dom/data';\r\nimport Manipulator from './mdb/dom/manipulator';\r\nimport SelectorEngine from './mdb/dom/selector-engine';\r\n\r\nimport WORDS from './words';\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Constants\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nconst NAME = 'dummy';\r\nconst DATA_KEY = `mdb.${NAME}`;\r\n\r\nconst SELECTOR_DATA_INIT = '[data-mdb-dummy-init]';\r\nconst SELECTOR_DUMMY_CREATED = `[data-mdb-${NAME}-created]`;\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  dummyText: 20,\r\n  dummyImg: '150',\r\n  dummyList: 5,\r\n  dummyTable: '5,5',\r\n  dummyCopy: null,\r\n  dummyRepeat: 1,\r\n  dummyTemplate: 'h1,p,table,h2,p,form,blockquote,img,ul',\r\n  dummyColor: null,\r\n  dummyTextColor: null,\r\n  dummyImgText: null,\r\n};\r\nconst OPTIONS_TYPE = {\r\n  dummyText: '(null || number)',\r\n  dummyImg: '(null || string)',\r\n  dummyList: '(null || number)',\r\n  dummyTable: '(null || string)',\r\n  dummyCopy: '(null || string)',\r\n  dummyRepeat: '(null || number)',\r\n  dummyTemplate: '(null || string)',\r\n  dummyColor: '(null || string)',\r\n  dummyTextColor: '(null || string)',\r\n  dummyImgText: '(null || string)',\r\n};\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Class Definition\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nclass Dummy {\r\n  constructor(element, options = {}) {\r\n    this._element = element;\r\n    this._jsOptions = options;\r\n    this._options = this._getConfig(options);\r\n\r\n    this._tag = null;\r\n    this._dummyAttributes = [];\r\n\r\n    if (this._element) {\r\n      Data.setData(element, DATA_KEY, this);\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  // Public\r\n  dispose() {\r\n    Data.removeData(this._element, DATA_KEY);\r\n\r\n    const dummyCreated = SelectorEngine.find(SELECTOR_DUMMY_CREATED);\r\n\r\n    dummyCreated.forEach((dummy) => {\r\n      dummy.parentNode.removeChild(dummy);\r\n    });\r\n\r\n    this._element.innerHTML = '';\r\n\r\n    this._element = null;\r\n  }\r\n\r\n  init() {\r\n    this._init();\r\n  }\r\n\r\n  // Private\r\n  _getConfig(options) {\r\n    let attributes = Manipulator.getDataAttributes(this._element);\r\n\r\n    // default options allows to pass null/empty attributes se we can check if we have to create e.g. dummy text with default values\r\n    // in case of that we don't want to overwrite default values with null\r\n    attributes = this._cleanObjectFromNulls(attributes);\r\n    options = this._cleanObjectFromNulls(options);\r\n\r\n    const config = {\r\n      ...DEFAULT_OPTIONS,\r\n      ...attributes,\r\n      ...options,\r\n    };\r\n\r\n    typeCheckConfig(NAME, config, OPTIONS_TYPE);\r\n\r\n    return config;\r\n  }\r\n\r\n  _getImageSize() {\r\n    // in case someone pass only one argument JS will think its a number and .split method will crash\r\n    let [width, height] = `${this._options.dummyImg}`.split(',');\r\n\r\n    // prevent size crashes when user passes sizes like \"200 , 200\"\r\n    width = width ? width.trim() : width;\r\n    height = height ? height.trim() : height;\r\n\r\n    if (width === '100%') {\r\n      // get element original width\r\n      width = parseInt(this._element.getAttribute('width'), 10) || this._element.offsetWidth;\r\n\r\n      // or element parent original width\r\n      width = width || (this._element.parentNode && this._element.parentNode.offsetWidth);\r\n    }\r\n\r\n    if (height === '100%') {\r\n      height = parseInt(this._element.getAttribute('height'), 10) || this._element.offsetHeight;\r\n\r\n      height = height || (this._element.parentNode && this._element.parentNode.offsetHeight);\r\n    }\r\n\r\n    height = height || width;\r\n\r\n    return [width, height];\r\n  }\r\n\r\n  _getColor(attr) {\r\n    return this._options[attr] ? `/${this._options[attr].split('#')[1]}` : '';\r\n  }\r\n\r\n  _setDummyAttributes() {\r\n    let attributes = null;\r\n\r\n    if (Object.keys(this._jsOptions).length !== 0 && this._jsOptions.constructor === Object) {\r\n      attributes = this._jsOptions;\r\n    } else {\r\n      attributes = Manipulator.getDataAttributes(this._element);\r\n    }\r\n\r\n    Object.keys(attributes).forEach((key) => {\r\n      this._dummyAttributes.push(key);\r\n    });\r\n  }\r\n\r\n  _init() {\r\n    const { initMDB, Ripple } = mdb;\r\n    initMDB({ Ripple });\r\n\r\n    this._tag = this._element.tagName.toLowerCase();\r\n\r\n    this._setDummyAttributes();\r\n\r\n    this._startDummyFactory();\r\n  }\r\n\r\n  _startDummyFactory() {\r\n    const tagProperties = [\r\n      'dummyText',\r\n      'dummyImg',\r\n      'dummyList',\r\n      'dummyTable',\r\n      'dummyCopy',\r\n      'dummyRepeat',\r\n      'dummyTemplate',\r\n    ];\r\n\r\n    let hasTagAttribute = false;\r\n\r\n    tagProperties.forEach((prop) => {\r\n      if (this._dummyAttributes.includes(prop)) {\r\n        hasTagAttribute = true;\r\n      }\r\n    });\r\n\r\n    // case for when only class=\"dummy\" has been added to element\r\n    if (!hasTagAttribute) {\r\n      this._matchDummyWithTag();\r\n      return;\r\n    }\r\n\r\n    this._dummyAttributes.forEach((attr) => {\r\n      switch (attr) {\r\n        case 'dummyTemplate':\r\n          this._createDummyTemplate();\r\n          break;\r\n        case 'dummyText':\r\n          this._createDummyText();\r\n          break;\r\n        case 'dummyImg':\r\n          this._createDummyImg();\r\n          break;\r\n        case 'dummyList':\r\n          this._createDummyList();\r\n          break;\r\n        case 'dummyTable':\r\n          this._createDummyTable();\r\n          break;\r\n        case 'dummyCopy':\r\n          this._createDummyCopy();\r\n          break;\r\n        case 'dummyRepeat':\r\n          this._createDummyRepeat();\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n    });\r\n  }\r\n\r\n  _matchDummyWithTag(tag) {\r\n    const caseTag = tag || this._tag;\r\n\r\n    switch (caseTag) {\r\n      case 'img':\r\n        this._createDummyImg();\r\n        break;\r\n      case 'ul':\r\n      case 'ol':\r\n        this._createDummyList();\r\n        break;\r\n      case 'table':\r\n        this._createDummyTable();\r\n        break;\r\n      default:\r\n        this._createDummyText();\r\n        break;\r\n    }\r\n  }\r\n\r\n  _determineDummyElement(tag) {\r\n    let el = this._element;\r\n\r\n    if (this._tag !== tag) {\r\n      const element = document.createElement(tag);\r\n\r\n      this._element.appendChild(element);\r\n\r\n      Manipulator.setDataAttribute(element, 'dummyCreated', '');\r\n\r\n      el = element;\r\n    }\r\n\r\n    return el;\r\n  }\r\n\r\n  _createDummyText() {\r\n    this._element[this._tag === 'input' ? 'value' : 'innerHTML'] += this._generateDummyText();\r\n\r\n    if (this._options.dummyTextColor) {\r\n      Manipulator.addStyle(this._element, { color: this._options.dummyTextColor });\r\n    }\r\n\r\n    this._removeAttribute('data-mdb-dummy-text');\r\n  }\r\n\r\n  _generateDummyText(length) {\r\n    const dummyTextLength = length || this._options.dummyText;\r\n\r\n    const getWord = () => {\r\n      return WORDS[Math.floor(Math.random() * WORDS.length)];\r\n    };\r\n\r\n    let text = getWord();\r\n    text = text.charAt(0).toUpperCase() + text.slice(1);\r\n\r\n    while (text.length < dummyTextLength) {\r\n      text += ` ${getWord()}`;\r\n    }\r\n\r\n    text = text.slice(0, dummyTextLength);\r\n    return text;\r\n  }\r\n\r\n  _generateMultipleTextTags(tag, length = 5, dummyTextLength = this._options.dummyText) {\r\n    let tags = '';\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      // eslint-disable-next-line\r\n      tags += `<${tag} data-mdb-dummy-created>${this._generateDummyText(dummyTextLength)}</${tag}>`;\r\n    }\r\n\r\n    return tags;\r\n  }\r\n\r\n  _createDummyImg() {\r\n    const element = this._determineDummyElement('img');\r\n    const query = this._generateQueryString();\r\n\r\n    element.src = query;\r\n\r\n    Manipulator.addStyle(element, { maxWidth: '100%' });\r\n\r\n    this._removeAttribute('data-mdb-dummy-img');\r\n  }\r\n\r\n  _generateQueryString() {\r\n    const [width, height] = this._getImageSize();\r\n    const bgColor = this._getColor('dummyColor');\r\n    const dummyTextColor = this._getColor('dummyTextColor');\r\n    const text = this._generateTextFromData();\r\n    const query = `${width}x${height}${bgColor}${dummyTextColor}${text}`;\r\n\r\n    return `https://place-hold.it/${query}`;\r\n  }\r\n\r\n  _generateTextFromData() {\r\n    // data-mdb-text can be null which means user wants text to be generated\r\n    let text = '';\r\n\r\n    if (this._dummyAttributes.includes('dummyImgText')) {\r\n      text = `?text=${\r\n        this._options.dummyImgText !== null ? this._options.dummyImgText : this._generateDummyText()\r\n      }`;\r\n      text = text.split(' ').join('+');\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  _createDummyList() {\r\n    const element = this._determineDummyElement('ul');\r\n\r\n    const listTemplate = this._generateMultipleTextTags('li', this._options.dummyList);\r\n\r\n    element.innerHTML = listTemplate;\r\n\r\n    this._removeAttribute('data-mdb-dummy-list');\r\n  }\r\n\r\n  _createDummyTable() {\r\n    const element = this._determineDummyElement('table');\r\n    const template = this._generateTableTemplate();\r\n\r\n    if (!element.classList.contains('table')) {\r\n      Manipulator.addClass(element, 'table');\r\n    }\r\n    element.innerHTML = template;\r\n\r\n    this._removeAttribute('data-mdb-dummy-table');\r\n  }\r\n\r\n  _generateTableTemplate() {\r\n    let [rows, cols] = `${this._options.dummyTable}`.split(',');\r\n\r\n    rows = rows ? rows.trim() : rows;\r\n    cols = cols ? cols.trim() : cols;\r\n\r\n    cols = cols || rows;\r\n\r\n    const dummyColumns = new Array(Number(cols)).fill(this._generateDummyText());\r\n    const dummyRow = new Array(Number(cols)).fill(this._generateDummyText());\r\n    const dummyRows = new Array(Number(rows)).fill(dummyRow);\r\n    const tableHTMLTemplate = `\r\n      <thead>\r\n        <tr>\r\n          ${dummyColumns.map((col) => `<th>${col}</th>`).join('')}\r\n        </tr>\r\n      </thead>\r\n        <tbody>${dummyRows\r\n          .map((row) => {\r\n            return `<tr>${row.map((cell) => `<td>${cell}</td>`).join(' ')}</tr>`;\r\n          })\r\n          .join(' ')}\r\n      </tbody>\r\n    `;\r\n\r\n    return tableHTMLTemplate;\r\n  }\r\n\r\n  _createDummyCopy() {\r\n    let originalElement = SelectorEngine.findOne(this._options.dummyCopy);\r\n\r\n    if (!originalElement) {\r\n      originalElement = {\r\n        outerHTML: `<p class=\"note note-warning\"><strong>Element <code>${this._options.dummyCopy}</code> not found</strong></p>`,\r\n      };\r\n    }\r\n\r\n    this._element.innerHTML =\r\n      originalElement[\r\n        originalElement.tagName === 'SCRIPT' || originalElement.tagName === 'TEMPLATE'\r\n          ? 'innerHTML'\r\n          : 'outerHTML'\r\n      ];\r\n\r\n    this._removeAttribute('data-mdb-dummy-copy');\r\n\r\n    // prevents from having two elements with same ID\r\n    if (this._options.dummyCopy.startsWith('#')) {\r\n      const copy = SelectorEngine.findOne(this._options.dummyCopy, this._element);\r\n      copy.removeAttribute('id');\r\n    }\r\n  }\r\n\r\n  _createDummyRepeat() {\r\n    if (!this._element.innerHTML) {\r\n      this._matchDummyWithTag();\r\n    }\r\n\r\n    this._removeAttribute('data-mdb-dummy-repeat');\r\n\r\n    const dummies = SelectorEngine.find(SELECTOR_DATA_INIT, this._element);\r\n\r\n    if (dummies.length > 0) {\r\n      dummies.forEach((dummy) => {\r\n        // eslint-disable-next-line no-new\r\n        new Dummy(dummy);\r\n      });\r\n    }\r\n\r\n    for (let i = 0; i < this._options.dummyRepeat; i++) {\r\n      const element = document.createElement(this._tag);\r\n\r\n      this._element.parentNode.insertBefore(element, this._element.nextSibling);\r\n\r\n      element.outerHTML = this._element.outerHTML;\r\n\r\n      Manipulator.setDataAttribute(element, 'dummyCreated', '');\r\n    }\r\n\r\n    // will find only dummies that were created by dummyRepeat\r\n    const dummyRepeats = SelectorEngine.find(\r\n      `${this._tag}${SELECTOR_DATA_INIT} + ${this._tag}${SELECTOR_DATA_INIT}`,\r\n      this._element.parentNode\r\n    );\r\n    dummyRepeats.forEach((dummy) => {\r\n      Manipulator.setDataAttribute(dummy, 'dummyCreated', '');\r\n      if (dummy.id === this._element.id) {\r\n        dummy.removeAttribute('id');\r\n      }\r\n    });\r\n  }\r\n\r\n  _createDummyTemplate() {\r\n    const dataTemplate = this._element.getAttribute('data-mdb-dummy-template');\r\n    const template = dataTemplate || this._options.dummyTemplate;\r\n    const tags = this._generateTemplateString(template);\r\n\r\n    Manipulator.addClass(this._element, 'container');\r\n\r\n    this._element.innerHTML = tags;\r\n\r\n    this._initializeComponents(template);\r\n\r\n    this._removeAttribute('data-mdb-dummy-template');\r\n  }\r\n\r\n  _generateTemplateString(templateString) {\r\n    let tags = templateString.split(',');\r\n\r\n    const nonDummyTags = {\r\n      a: () => `<a href=\"#\" style=\"margin-bottom: 1rem\"/>${this._generateDummyText()}</a>`,\r\n      img: () => {\r\n        this._options.dummyImg = '100%,700';\r\n        return `<img src=${this._generateQueryString()} style=\"max-width:100%; margin-bottom: 1rem\"/>`;\r\n      },\r\n      ul: () => `<ul>${this._generateMultipleTextTags('li', 5)}</ul>`,\r\n      ol: () => `<ol>${this._generateMultipleTextTags('li', 5)}</ol>`,\r\n      table: () => `<table class=\"table\">${this._generateTableTemplate()}</table>`,\r\n      select: () => `<select class=\"select\">${this._generateMultipleTextTags('option')}</select>`,\r\n      button: () =>\r\n        `<button class=\"btn btn-primary my-3\" data-mdb-ripple-init>${this._generateDummyText(\r\n          10\r\n        )}</button>`,\r\n      input: () => {\r\n        const id = getUID('dummy-input-');\r\n        const inputTemplate = `\r\n          <div class=\"form-outline\">\r\n            <input type=\"text\" id=\"${id}\" class=\"form-control\" />\r\n            <label class=\"form-label\" for=\"${id}\">${this._generateDummyText()}</label>\r\n          </div>\r\n        `;\r\n        return inputTemplate;\r\n      },\r\n      textarea: () => {\r\n        const id = getUID('dummy-textarea-');\r\n        const inputTemplate = `\r\n          <div class=\"form-outline\">\r\n            <textarea type=\"text\" id=\"${id}\" class=\"form-control\" rows=\"4\"></textarea>\r\n            <label class=\"form-label\" for=\"${id}\">${this._generateDummyText()}</label>\r\n          </div>\r\n        `;\r\n        return inputTemplate;\r\n      },\r\n      form: () =>\r\n        `<section class=\"p-4 d-flex justify-content-center mb-4\">\r\n          <form action=\"#\" style=\"width: 100%; max-width:26rem\">${this._generateTemplateString(\r\n            'input,textarea,select,button'\r\n          )}\r\n          </form>\r\n        </section>\r\n      `,\r\n      blockquote: () =>\r\n        `<figure>\r\n        <blockquote class=\"blockquote\">\r\n          <p>\r\n          ${this._generateDummyText(50)}\r\n          </p>\r\n        </blockquote>\r\n        <figcaption class=\"blockquote-footer\">\r\n          ${this._generateDummyText(\r\n            10\r\n          )}<cite title=\"Source Title\"> ${this._generateDummyText()}</cite>\r\n        </figcaption>\r\n      </figure>`,\r\n    };\r\n\r\n    tags = tags\r\n      .map((tag) => tag.trim().toLowerCase())\r\n      // eslint-disable-next-line no-confusing-arrow\r\n      .map((tag) =>\r\n        nonDummyTags[tag] ? nonDummyTags[tag]() : this._generateMultipleTextTags(tag, 1, 100)\r\n      )\r\n      .join('');\r\n\r\n    return tags;\r\n  }\r\n\r\n  _initializeComponents(template) {\r\n    const tags = template.split(',');\r\n\r\n    const initInput = () => {\r\n      SelectorEngine.find('.form-outline', this._element).forEach((formOutline) => {\r\n        new mdb.Input(formOutline).init();\r\n      });\r\n    };\r\n    const initSelect = () => {\r\n      SelectorEngine.find('select', this._element).forEach((select) => {\r\n        // eslint-disable-next-line no-new\r\n        new mdb.Select(select);\r\n      });\r\n    };\r\n\r\n    tags.forEach((tag) => {\r\n      switch (tag) {\r\n        case 'input':\r\n          initInput();\r\n          break;\r\n        case 'select':\r\n          initSelect();\r\n          break;\r\n        case 'form':\r\n          initInput();\r\n          initSelect();\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n    });\r\n\r\n    SelectorEngine.find('.form-outline', this._element).forEach((formOutline) => {\r\n      Manipulator.addStyle(formOutline, { marginBottom: '1rem' });\r\n    });\r\n  }\r\n\r\n  _cleanObjectFromNulls(obj) {\r\n    const propNames = Object.getOwnPropertyNames(obj);\r\n    for (let i = 0; i < propNames.length; i++) {\r\n      const propName = propNames[i];\r\n      if (obj[propName] === null || obj[propName] === undefined) {\r\n        delete obj[propName];\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  _removeAttribute(attr) {\r\n    // attribute can be emtpy/null which Manipulator will treat as if there is no attribute\r\n    if (this._element.hasAttribute(attr)) {\r\n      this._element.removeAttribute(attr);\r\n    }\r\n  }\r\n\r\n  // Static\r\n  static get NAME() {\r\n    return NAME;\r\n  }\r\n\r\n  static jQueryInterface(config, options) {\r\n    return this.each(function () {\r\n      let data = Data.getData(this, DATA_KEY);\r\n      const _config = typeof config === 'object' && config;\r\n\r\n      if (!data && /dispose/.test(config)) {\r\n        return;\r\n      }\r\n\r\n      if (!data) {\r\n        data = new Dummy(this, _config);\r\n      }\r\n\r\n      if (typeof config === 'string') {\r\n        if (typeof data[config] === 'undefined') {\r\n          throw new TypeError(`No method named \"${config}\"`);\r\n        }\r\n\r\n        data[config](options);\r\n      }\r\n    });\r\n  }\r\n\r\n  static getInstance(element) {\r\n    return Data.getData(element, DATA_KEY);\r\n  }\r\n}\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * Data Api implementation - auto initialization\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nSelectorEngine.find(SELECTOR_DATA_INIT).forEach((el) => {\r\n  let instance = Dummy.getInstance(el);\r\n  if (!instance) {\r\n    instance = new Dummy(el);\r\n  }\r\n\r\n  return instance;\r\n});\r\n\r\n/**\r\n * ------------------------------------------------------------------------\r\n * jQuery\r\n * ------------------------------------------------------------------------\r\n * add .Dummy to jQuery only if jQuery is present\r\n */\r\n\r\nonDOMContentLoaded(() => {\r\n  const $ = getjQuery();\r\n\r\n  if ($) {\r\n    const JQUERY_NO_CONFLICT = $.fn[NAME];\r\n    $.fn[NAME] = Dummy.jQueryInterface;\r\n    $.fn[NAME].Constructor = Dummy;\r\n    $.fn[NAME].noConflict = () => {\r\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\r\n      return Dummy.jQueryInterface;\r\n    };\r\n  }\r\n});\r\n\r\nexport default Dummy;\r\n"],"names":["getUID","prefix","Math","floor","random","document","getElementById","documentElement","dir","mapData","storeData","id","set","element","key","data","get","keyProperties","Data","setData","instance","getData","removeData","delete","normalizeData","val","Number","toString","normalizeDataKey","replace","chr","toLowerCase","Manipulator","setDataAttribute","value","setAttribute","removeDataAttribute","removeAttribute","getDataAttributes","attributes","dataset","Object","keys","filter","startsWith","forEach","pureKey","charAt","slice","length","getDataAttribute","getAttribute","offset","rect","getBoundingClientRect","top","body","scrollTop","left","scrollLeft","position","offsetTop","offsetLeft","style","assign","toggleClass","className","classList","contains","remove","add","addClass","addStyle","property","removeClass","hasClass","findElements","Element","prototype","querySelectorAll","findElement","querySelector","e","CustomEvent","cancelable","createElement","addEventListener","preventDefault","dispatchEvent","defaultPrevented","scopeSelectorRegex","_","selector","test","this","hasId","Boolean","nodeList","matches","find","call","findOne","SelectorEngine","closest","concat","findFn","children","child","parents","ancestor","parentNode","nodeType","Node","ELEMENT_NODE","push","prev","previous","previousElementSibling","next","nextElementSibling","WORDS","NAME","DATA_KEY","SELECTOR_DATA_INIT","SELECTOR_DUMMY_CREATED","DEFAULT_OPTIONS","dummyText","dummyImg","dummyList","dummyTable","dummyCopy","dummyRepeat","dummyTemplate","dummyColor","dummyTextColor","dummyImgText","OPTIONS_TYPE","Dummy","constructor","options","_element","_jsOptions","_options","_getConfig","_tag","_dummyAttributes","_init","dispose","dummy","removeChild","innerHTML","init","_cleanObjectFromNulls","config","componentName","configTypes","expectedTypes","valueType","obj","match","toType","RegExp","Error","toUpperCase","typeCheckConfig","_getImageSize","width","height","split","trim","parseInt","offsetWidth","offsetHeight","_getColor","attr","_setDummyAttributes","initMDB","Ripple","mdb","tagName","_startDummyFactory","hasTagAttribute","prop","includes","_createDummyTemplate","_createDummyText","_createDummyImg","_createDummyList","_createDummyTable","_createDummyCopy","_createDummyRepeat","_matchDummyWithTag","tag","_determineDummyElement","el","appendChild","_generateDummyText","color","_removeAttribute","dummyTextLength","getWord","text","_generateMultipleTextTags","tags","i","query","_generateQueryString","src","maxWidth","_generateTextFromData","join","listTemplate","template","_generateTableTemplate","rows","cols","dummyColumns","Array","fill","dummyRow","dummyRows","map","col","row","cell","originalElement","outerHTML","dummies","insertBefore","nextSibling","_generateTemplateString","_initializeComponents","templateString","nonDummyTags","a","img","ul","ol","table","select","button","input","textarea","form","blockquote","initInput","formOutline","Input","initSelect","Select","marginBottom","propNames","getOwnPropertyNames","propName","hasAttribute","jQueryInterface","each","_config","TypeError","getInstance","callback","$","jQuery","window","getjQuery","JQUERY_NO_CONFLICT","fn","Constructor","noConflict","readyState"],"mappings":"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nB,MAAO,CAACwB,GAGVA,EAAWA,EAASC,sBACrB,CAED,MAAO,EACR,EAED,IAAAC,CAAKzG,EAAS+E,GACZ,IAAI0B,EAAOzG,EAAQ0G,mBAEnB,KAAOD,GAAM,CACX,GAAIxB,KAAKI,QAAQoB,EAAM1B,GACrB,MAAO,CAAC0B,GAGVA,EAAOA,EAAKC,kBACb,CAED,MAAO,EACR,GClFGC,EAAQ,CACZ,eACA,cACA,UACA,cACA,aACA,WACA,cACA,cACA,gBACA,WACA,SACA,WACA,UACA,eACA,oBACA,QACA,gBACA,eACA,QACA,QACA,WACA,YACA,SACA,UACA,cACA,aACA,YACA,WACA,eACA,WACA,cACA,YACA,UACA,SACA,QACA,aACA,QACA,YACA,aACA,aACA,WACA,WACA,SACA,cACA,WACA,YACA,WACA,WACA,aACA,aACA,cACA,UACA,aACA,QACA,QACA,YACA,WACA,UACA,QACA,WACA,WACA,YACA,kBACA,OACA,YACA,OACA,QACA,SACA,QACA,UACA,UACA,YACA,UACA,eACA,SACA,UACA,cACA,YACA,YACA,WACA,OACA,QACA,YACA,UACA,cACA,QACA,QACA,cACA,cACA,iBACA,gBACA,eACA,YACA,WACA,OACA,cACA,YACA,MACA,UACA,kBACA,iBACA,WACA,YACA,WACA,WACA,eACA,gBACA,WACA,YACA,YACA,YACA,UACA,aACA,SACA,QACA,cACA,iBACA,eACA,mBACA,eACA,QACA,cACA,WACA,cACA,SACA,cACA,aACA,UACA,YACA,QACA,QACA,eACA,QACA,SACA,WACA,YACA,gBACA,kBACA,kBACA,QACA,WACA,WACA,WACA,cACA,aACA,YACA,YACA,YACA,aACA,UACA,cACA,YACA,gBACA,eACA,eACA,UACA,WACA,cACA,aACA,YACA,YACA,iBACA,YACA,aACA,gBACA,OACA,aACA,UACA,aACA,WACA,aACA,eACA,UACA,cACA,cACA,aACA,MACA,aACA,YACA,UACA,aACA,WACA,OACA,YACA,SACA,eACA,YACA,oBACA,YACA,UACA,SACA,WACA,SACA,aACA,cACA,aACA,YACA,kBACA,eACA,kBACA,UACA,aACA,YACA,YACA,eACA,QACA,YACA,aACA,UACA,cACA,UACA,mBACA,aACA,WACA,eACA,QACA,SACA,QACA,WACA,WACA,cACA,SACA,cACA,UACA,QACA,WACA,aACA,cACA,eACA,eACA,UACA,YACA,YACA,cACA,cACA,cACA,QACA,YACA,SACA,aACA,WACA,UACA,iBACA,UACA,aACA,WACA,UACA,cACA,eACA,WACA,gBACA,aACA,WACA,SACA,cACA,WACA,cACA,eACA,YACA,kBACA,YACA,aACA,eACA,UACA,YACA,aACA,OACA,WACA,eACA,YACA,WACA,UACA,SACA,aACA,aACA,cACA,WACA,YACA,aACA,WACA,YACA,WACA,QACA,aACA,cACA,aACA,SACA,UACA,QACA,YACA,WACA,aACA,cACA,gCACA,mBACA,iBACA,YACA,aC7RIC,EAAO,QACPC,EAAW,OAAOD,IAElBE,EAAqB,wBACrBC,EAAyB,aAAaH,aAEtCI,EAAkB,CACtBC,UAAW,GACXC,SAAU,MACVC,UAAW,EACXC,WAAY,MACZC,UAAW,KACXC,YAAa,EACbC,cAAe,yCACfC,WAAY,KACZC,eAAgB,KAChBC,aAAc,MAEVC,EAAe,CACnBV,UAAW,mBACXC,SAAU,mBACVC,UAAW,mBACXC,WAAY,mBACZC,UAAW,mBACXC,YAAa,mBACbC,cAAe,mBACfC,WAAY,mBACZC,eAAgB,mBAChBC,aAAc,oBAShB,MAAME,EACJ,WAAAC,CAAY7H,EAAS8H,EAAU,IAC7B7C,KAAK8C,SAAW/H,EAChBiF,KAAK+C,WAAaF,EACb7C,KAAAgD,SAAWhD,KAAKiD,WAAWJ,GAEhC7C,KAAKkD,KAAO,KACZlD,KAAKmD,iBAAmB,GAEpBnD,KAAK8C,WACF1H,EAAAC,QAAQN,EAAS6G,EAAU5B,MAChCA,KAAKoD,QAER,CAGD,OAAAC,GACOjI,EAAAI,WAAWwE,KAAK8C,SAAUlB,GAEVpB,EAAeH,KAAKyB,GAE5B/E,SAASuG,IACdA,EAAAtC,WAAWuC,YAAYD,EA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"}